{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sh",
				"shortcut"
			],
			[
				"sho",
				"shortcut_t"
			],
			[
				"las",
				"last_press"
			],
			[
				"uin",
				"uint32_t"
			]
		]
	},
	"buffers":
	[
		{
			"file": "platformio.ini",
			"settings":
			{
				"buffer_size": 585,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABEAgAAOyBQbGF0Zm9ybUlPIFByb2plY3QgQ29uZmlndXJhdGlvbiBGaWxlCjsKOyAgIEJ1aWxkIG9wdGlvbnM6IGJ1aWxkIGZsYWdzLCBzb3VyY2UgZmlsdGVyCjsgICBVcGxvYWQgb3B0aW9uczogY3VzdG9tIHVwbG9hZCBwb3J0LCBzcGVlZCBhbmQgZXh0cmEgZmxhZ3MKOyAgIExpYnJhcnkgb3B0aW9uczogZGVwZW5kZW5jaWVzLCBleHRyYSBsaWJyYXJ5IHN0b3JhZ2VzCjsgICBBZHZhbmNlZCBvcHRpb25zOiBleHRyYSBzY3JpcHRpbmcKOwo7IFBsZWFzZSB2aXNpdCBkb2N1bWVudGF0aW9uIGZvciB0aGUgb3RoZXIgb3B0aW9ucyBhbmQgZXhhbXBsZXMKOyBodHRwczovL2RvY3MucGxhdGZvcm1pby5vcmcvcGFnZS9wcm9qZWN0Y29uZi5odG1sCgpbZW52Om1pY3JvXQpwbGF0Zm9ybSA9IGF0bWVsYXZyCmJvYXJkID0gbWljcm8KZnJhbWV3b3JrID0gYXJkdWlubwpsaWJfZGVwcyA9IAoJZmFzdGxlZC9GYXN0TEVEQF4zLjQuMAoJbmljb2hvb2QvSElELVByb2plY3RAXjIuOC4yCglwYXVsby1yYWNhL1lldCBBbm90aGVyIEFyZHVpbm8gUGNJbnQgTGlicmFyeUBeMi4xLjAKCXBhdWxzdG9mZnJlZ2VuL0VuY29kZXJAXjEuNC4xCgAAAAAAAAAARAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAIAAAAAAABEAgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"paste",
					null,
					"AQAAAEMCAAAAAAAAUgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwIAAAAAAABDAgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"indent",
					null,
					"AgAAAEQCAAAAAAAARQIAAAAAAAAAAAAATgIAAAAAAABPAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgIAAAAAAABJAgAAAAAAAAAAAAAAgERA"
				],
				[
					17,
					1,
					"cut",
					null,
					"AQAAAEMCAAAAAAAAQwIAAAAAAAARAAAACglLZXlib2FyZAoJTW91c2U",
					"AQAAAAAAAAABAAAAVAIAAAAAAABDAgAAAAAAAP///////+9/"
				],
				[
					19,
					1,
					"paste",
					null,
					"AQAAALoBAAAAAAAAywEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAHBA"
				],
				[
					25,
					1,
					"right_delete",
					null,
					"AQAAALoBAAAAAAAAugEAAAAAAAARAAAACglLZXlib2FyZAoJTW91c2U",
					"AQAAAAAAAAABAAAAywEAAAAAAAC6AQAAAAAAAAAAAAAAwFhA"
				],
				[
					27,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABEAgAAOyBQbGF0Zm9ybUlPIFByb2plY3QgQ29uZmlndXJhdGlvbiBGaWxlCjsKOyAgIEJ1aWxkIG9wdGlvbnM6IGJ1aWxkIGZsYWdzLCBzb3VyY2UgZmlsdGVyCjsgICBVcGxvYWQgb3B0aW9uczogY3VzdG9tIHVwbG9hZCBwb3J0LCBzcGVlZCBhbmQgZXh0cmEgZmxhZ3MKOyAgIExpYnJhcnkgb3B0aW9uczogZGVwZW5kZW5jaWVzLCBleHRyYSBsaWJyYXJ5IHN0b3JhZ2VzCjsgICBBZHZhbmNlZCBvcHRpb25zOiBleHRyYSBzY3JpcHRpbmcKOwo7IFBsZWFzZSB2aXNpdCBkb2N1bWVudGF0aW9uIGZvciB0aGUgb3RoZXIgb3B0aW9ucyBhbmQgZXhhbXBsZXMKOyBodHRwczovL2RvY3MucGxhdGZvcm1pby5vcmcvcGFnZS9wcm9qZWN0Y29uZi5odG1sCgpbZW52Om1pY3JvXQpwbGF0Zm9ybSA9IGF0bWVsYXZyCmJvYXJkID0gbWljcm8KZnJhbWV3b3JrID0gYXJkdWlubwpsaWJfZGVwcyA9IAoJZmFzdGxlZC9GYXN0TEVEQF4zLjQuMAoJcGF1bG8tcmFjYS9ZZXQgQW5vdGhlciBBcmR1aW5vIFBjSW50IExpYnJhcnlAXjIuMS4wCglwYXVsc3RvZmZyZWdlbi9FbmNvZGVyQF4xLjQuMQoJbmljb2hvb2QvSElELVByb2plY3RAXjIuOC4yCgAAAAAAAAAAZwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABnAgAAOyBQbGF0Zm9ybUlPIFByb2plY3QgQ29uZmlndXJhdGlvbiBGaWxlCjsKOyAgIEJ1aWxkIG9wdGlvbnM6IGJ1aWxkIGZsYWdzLCBzb3VyY2UgZmlsdGVyCjsgICBVcGxvYWQgb3B0aW9uczogY3VzdG9tIHVwbG9hZCBwb3J0LCBzcGVlZCBhbmQgZXh0cmEgZmxhZ3MKOyAgIExpYnJhcnkgb3B0aW9uczogZGVwZW5kZW5jaWVzLCBleHRyYSBsaWJyYXJ5IHN0b3JhZ2VzCjsgICBBZHZhbmNlZCBvcHRpb25zOiBleHRyYSBzY3JpcHRpbmcKOwo7IFBsZWFzZSB2aXNpdCBkb2N1bWVudGF0aW9uIGZvciB0aGUgb3RoZXIgb3B0aW9ucyBhbmQgZXhhbXBsZXMKOyBodHRwczovL2RvY3MucGxhdGZvcm1pby5vcmcvcGFnZS9wcm9qZWN0Y29uZi5odG1sCgpbZW52Om1pY3JvXQpwbGF0Zm9ybSA9IGF0bWVsYXZyCmJvYXJkID0gbWljcm8KZnJhbWV3b3JrID0gYXJkdWlubwpsaWJfZGVwcyA9IAoJZmFzdGxlZC9GYXN0TEVEQF4zLjQuMAoJcGF1bG8tcmFjYS9ZZXQgQW5vdGhlciBBcmR1aW5vIFBjSW50IExpYnJhcnlAXjIuMS4wCglwYXVsc3RvZmZyZWdlbi9FbmNvZGVyQF4xLjQuMQoJbmljb2hvb2QvSElELVByb2plY3RAXjIuOC4yCglhcmR1aW5vLWxpYnJhcmllcy9LZXlib2FyZEBeMS4wLjIKAAAAAAAAAACHAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\nHID"
					},
					"BAAAALoBAAAAAAAAuwEAAAAAAAAAAAAAuwEAAAAAAAC8AQAAAAAAAAAAAAC8AQAAAAAAAL0BAAAAAAAAAAAAAL0BAAAAAAAAvgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugEAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAALsBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwEAAAAAAAC7AQAAAAAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"right_delete",
					null,
					"AQAAAEgCAAAAAAAASAIAAAAAAABDAAAACglhcmR1aW5vLWxpYnJhcmllcy9LZXlib2FyZEBeMS4wLjIKCWFyZHVpbm8tbGlicmFyaWVzL01vdXNlQF4xLjAuMQ",
					"AQAAAAAAAAABAAAAiwIAAAAAAABIAgAAAAAAAAAAAAAAEHNA"
				]
			]
		},
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 1486,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "#include <Arduino.h>"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAlAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"paste",
					null,
					"AgAAABUAAAAAAAAAzgUAAAAAAAAAAAAAzgUAAAAAAADOBQAAAAAAAH8AAAAKdm9pZCBzZXR1cCgpIHsKICAvLyBwdXQgeW91ciBzZXR1cCBjb2RlIGhlcmUsIHRvIHJ1biBvbmNlOgp9Cgp2b2lkIGxvb3AoKSB7CiAgLy8gcHV0IHlvdXIgbWFpbiBjb2RlIGhlcmUsIHRvIHJ1biByZXBlYXRlZGx5Ogp9",
					"AQAAAAAAAAABAAAAlAAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/guill/Documents/GIT/MediaMacroKeyboard/.gitignore",
			"settings":
			{
				"buffer_size": 20,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "firmware"
					},
					"CAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "/.pio"
					},
					"BQAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAANAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Microsoft Windows [Version 10.0.19043.1266]                                                                                                                                         \n(c) Microsoft Corporation. All rights reserved.                                                                                                                                     \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib search HID-project                                                                                                 \nFound 3 libraries:                                                                                                                                                                  \n                                                                                                                                                                                    \nHID-Project                                                                                                                                                                         \n===========                                                                                                                                                                         \n#ID: 523                                                                                                                                                                            \nExtended HID Functions for Arduino. Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.        \n                                                                                                                                                                                    \nKeywords: communication                                                                                                                                                             \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: NicoHood                                                                                                                                                                   \n                                                                                                                                                                                    \nCorsair Lighting Protocol                                                                                                                                                           \n=========================                                                                                                                                                           \n#ID: 6137                                                                                                                                                                           \nControl LED strips via USB from a PC. The library mimics Corsair LED Controller devices and can be controlled via USB in iCUE.                                                      \n                                                                                                                                                                                    \nKeywords: device, control                                                                                                                                                           \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Atmel AVR                                                                                                                                                     \nAuthors: Leon Kiefer                                                                                                                                                                \n                                                                                                                                                                                    \nIwitVolumeKnob                                                                                                                                                                      \n==============                                                                                                                                                                      \n#ID: 6721                                                                                                                                                                           \nLibrary to support the hardware built into many chinese volume knobs (iWit). This library depends on EncoderStepCounter                                                             \n                                                                                                                                                                                    \nKeywords: device, control                                                                                                                                                           \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Atmel AVR                                                                                                                                                     \nAuthors: Manuel Reimer                                                                                                                                                              \n                                                                                                                                                                                    \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install                                                                                                            \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps\\micro                                                                                        \nLibrary Manager: FastLED @ 3.4.0 is already installed                                                                                                                               \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install HID-Project                                                                                                \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps\\micro                                                                                        \nLibrary Manager: Installing HID-Project                                                                                                                                             \nDownloading  [####################################]  100%                                                                                                                           \nUnpacking  [####################################]  100%                                                                                                                             \nLibrary Manager: HID-Project @ 2.8.2 has been installed!                                                                                                                            \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib search YetAnotherPCint                                                                                             \nFound 2 libraries:                                                                                                                                                                  \n                                                                                                                                                                                    \nYet Another Arduino PcInt Library                                                                                                                                                   \n=================================                                                                                                                                                   \n#ID: 795                                                                                                                                                                            \nA library to support Pin Change Interruptions (PCINT) on AVR Arduinos. This library is fast, supports trigger modes (FALLING, RISING, CHANGE) and supports context data and pin stat​‌​\ne as callback arguments                                                                                                                                                             \n                                                                                                                                                                                    \nKeywords: signal, input, output                                                                                                                                                     \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Atmel AVR                                                                                                                                                     \nAuthors: keestux, SODAQ, GabrielNotman, Paulo Costa                                                                                                                                 \n                                                                                                                                                                                    \nAsyncSonar                                                                                                                                                                          \n==========                                                                                                                                                                          \n#ID: 6728                                                                                                                                                                           \nLibrary for non blocking controlling a ultrasonic sensor like HC-SR04                                                                                                               \n                                                                                                                                                                                    \nKeywords: other                                                                                                                                                                     \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Luis Llamas                                                                                                                                                                \n                                                                                                                                                                                    \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install Yet Another Arduino PcInt Library                                                                          \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps\\micro                                                                                        \nLibrary Manager: Installing Yet                                                                                                                                                     \nError: Could not find the package with 'Yet' requirements for your system 'windows_amd64'                                                                                           \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install \"Yet Another Arduino PcInt Library\"                                                                        \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps\\micro                                                                                        \nLibrary Manager: Installing Yet Another Arduino PcInt Library                                                                                                                       \nDownloading  [####################################]  100%                                                                                                                           \nUnpacking  [####################################]  100%                                                                                                                             \nLibrary Manager: Yet Another Arduino PcInt Library @ 2.1.0 has been installed!                                                                                                      \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib search Encoder                                                                                                     \nFound 204 libraries:                                                                                                                                                                \n                                                                                                                                                                                    \nLiquidTWI2                                                                                                                                                                          \n==========                                                                                                                                                                          \n#ID: 6063                                                                                                                                                                           \nA lean, high speed I2C LCD Library for Arduino, which supports MCP23008 and MCP23017                                                                                                \n                                                                                                                                                                                    \nKeywords: i2c, lcd, rgb                                                                                                                                                             \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: lincomatic                                                                                                                                                                 \n                                                                                                                                                                                    \nTMC2130Stepper                                                                                                                                                                      \n==============                                                                                                                                                                      \n#ID: 1493                                                                                                                                                                           \nArduino library for Trinamic TMC2130 stepper drivers. Easily configure your TMC2130 stepper motor drivers                                                                           \n                                                                                                                                                                                    \nKeywords: device, control                                                                                                                                                           \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Atmel AVR, Atmel SAM                                                                                                                                          \nAuthors: teemuatlut                                                                                                                                                                 \n                                                                                                                                                                                    \nM5Stack                                                                                                                                                                             \n=======                                                                                                                                                                             \n#ID: 1851                                                                                                                                                                           \nLibrary for M5Stack Core development kit                                                                                                                                            \n                                                                                                                                                                                    \nKeywords: m5stack                                                                                                                                                                   \nCompatible frameworks: Arduino, Espressif IoT Development Framework, Simba, Pumbaa                                                                                                  \nCompatible platforms: Espressif 32                                                                                                                                                  \nAuthors: M5Stack                                                                                                                                                                    \n                                                                                                                                                                                    \nAdafruit seesaw Library                                                                                                                                                             \n=======================                                                                                                                                                             \n#ID: 1890                                                                                                                                                                           \nThis is a library for the Adafruit seesaw helper IC.                                                                                                                                \n                                                                                                                                                                                    \nKeywords: other                                                                                                                                                                     \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Adafruit                                                                                                                                                                   \n                                                                                                                                                                                    \nlvgl                                                                                                                                                                                \n====                                                                                                                                                                                \n#ID: 6598                                                                                                                                                                           \nGraphics library to create embedded GUI with easy-to-use graphical elements, beautiful visual effects and low memory footprint. It offers anti-aliasing, opacity, and animations usi​‌​\nng only one frame buffer.                                                                                                                                                           \n                                                                                                                                                                                    \nKeywords: graphics, gui, embedded, tft, lvgl                                                                                                                                        \nCompatible frameworks: WiringPi, PULP OS, CMSIS, WD-Firmware, Kendryte Standalone SDK, Kendryte FreeRTOS SDK, Shakti SDK, Nuclei SDK, Arduino, STM32Cube, GigaDevice GD32V SDK, LOGI​‌​\nCROM SDK, PULP SDK, PULP Runtime Environment, Freedom E SDK, FreeRTOS, ESP8266 RTOS SDK, ESP8266 Non-OS SDK, Mbed, Standard Peripheral Library, libopencm3, Zephyr RTOS, Espressif I​‌​\noT Development Framework, Simba, Pumbaa                                                                                                                                             \nCompatible platforms: Aceinna IMU, Infineon XMC, Kendryte K210, GigaDevice GD32V, Nuclei, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Freescale Kinetis, Int​‌​\nel ARC32, Linux ARM, Linux i686, Linux x86_64, Native, Windows x86, Microchip PIC32, Nordic nRF51, NXP LPC, Silicon Labs EFM32, ST STM32, Teensy, TI MSP430, TI TIVA, Lattice iCE40,​‌​\n Intel MCS-51 (8051), Espressif 32, Nordic nRF52, Maxim 32, WIZNet W7500, RISC-V GAP, ST STM8, SiFive, Shakti, Atmel megaAVR, NXP i.MX RT, CHIPS Alliance, Motorola 68k with up to d​‌​\nate toolchain builds, Synwit SWM320, Logic Green boards, OpenHW Group, HWLogic, HARDWARIO TOWER - Industrial IoT Kit, LOGICROM Development Platform, Bonfire CPU, Raspberry Pi RP204​‌​\n0, Azadi, Rath RISC-V                                                                                                                                                               \nAuthors: LVGL                                                                                                                                                                       \n                                                                                                                                                                                    \nEncoder                                                                                                                                                                             \n=======                                                                                                                                                                             \n#ID: 129                                                                                                                                                                            \nCounts quadrature pulses from rotary & linear position encoders. Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or sha​‌​\nft sensors and other position sensors.                                                                                                                                              \n                                                                                                                                                                                    \nKeywords: signal, input, output                                                                                                                                                     \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Paul Stoffregen                                                                                                                                                            \n                                                                                                                                                                                    \nArduinoMenu library                                                                                                                                                                 \n===================                                                                                                                                                                 \n#ID: 1468                                                                                                                                                                           \nGeneric menu/interactivity system. Easy to define menu system with sub-menus and associated function to call. Works from serial to Web depending on the hardware.                   \n                                                                                                                                                                                    \nKeywords: display                                                                                                                                                                   \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Rui Azevedo, ruihfazevedo@gmail.com, neu-rah                                                                                                                               \n                                                                                                                                                                                    \nSimpleButton                                                                                                                                                                        \n============                                                                                                                                                                        \n#ID: 5608                                                                                                                                                                           \nManage buttons easily                                                                                                                                                               \n                                                                                                                                                                                    \nKeywords: simple, button, spacehuhn                                                                                                                                                 \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Stefan Kremser                                                                                                                                                             \n                                                                                                                                                                                    \nESP32Encoder                                                                                                                                                                        \n============                                                                                                                                                                        \n#ID: 5835                                                                                                                                                                           \nEncoder library for the ESP32 using interrupts. Encoder library for the ESP32 using interrupts. This library supports quadrature and half quadrature.                               \n                                                                                                                                                                                    \nKeywords: device, control                                                                                                                                                           \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Espressif 32                                                                                                                                                  \nAuthors: Kevin Harrington                                                                                                                                                           \n                                                                                                                                                                                    \nRotaryEncoder                                                                                                                                                                       \n=============                                                                                                                                                                       \n#ID: 1569                                                                                                                                                                           \nUse a rotary encoder with quadrature pulses as an input device. This library decodes the signals from a rotary encoder and translates them into a counter position. The library come​‌​\ns with some samples that show how to use the library with and without interrupts.                                                                                                   \n                                                                                                                                                                                    \nKeywords: signal, input, output                                                                                                                                                     \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Matthias Hertel                                                                                                                                                            \n                                                                                                                                                                                    \nShow next libraries? [y/N]: N                                                                                                                                                       \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install Encoder                                                                                                    \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps\\micro                                                                                        \nLibrary Manager: Installing Encoder                                                                                                                                                 \nLibrary Manager: Warning! More than one package has been found by Encoder requirements:                                                                                             \n - paulstoffregen/Encoder @ 1.4.1                                                                                                                                                   \n - mbed-vsluiter/Encoder @ 0.0.0+sha.18b000b443af                                                                                                                                   \n - mbed-porizou/Encoder @ 0.0.0+sha.28acb74250ee                                                                                                                                    \nLibrary Manager: Please specify detailed REQUIREMENTS using package owner and version (showed above) to avoid name conflicts                                                        \nDownloading  [####################################]  100%                                                                                                                           \nUnpacking  [####################################]  100%                                                                                                                             \nLibrary Manager: Encoder @ 1.4.1 has been installed!                                                                                                                                \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install Encoder @ 1.4.4                                                                                            \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps\\micro                                                                                        \nLibrary Manager: Encoder @ 1.4.1 is already installed                                                                                                                               \nLibrary Manager: Installing                                                                                                                                                         \nError: Traceback (most recent call last):                                                                                                                                           \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\__main__.py\", line 130, in main                                                                                \n    cli()  # pylint: disable=no-value-for-parameter                                                                                                                                 \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1128, in __call__                                                                                    \n    return self.main(*args, **kwargs)                                                                                                                                               \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1053, in main                                                                                        \n    rv = self.invoke(ctx)                                                                                                                                                           \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\commands\\__init__.py\", line 44, in invoke                                                                      \n    return super(PlatformioCLI, self).invoke(ctx)                                                                                                                                   \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1659, in invoke                                                                                      \n    return _process_result(sub_ctx.command.invoke(sub_ctx))                                                                                                                         \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1659, in invoke                                                                                      \n    return _process_result(sub_ctx.command.invoke(sub_ctx))                                                                                                                         \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1395, in invoke                                                                                      \n    return ctx.invoke(self.callback, **ctx.params)                                                                                                                                  \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 754, in invoke                                                                                       \n    return __callback(*args, **kwargs)                                                                                                                                              \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\decorators.py\", line 26, in new_func                                                                                \n    return f(get_current_context(), *args, **kwargs)                                                                                                                                \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\commands\\lib\\command.py\", line 157, in lib_install                                                             \n    installed_pkgs = {                                                                                                                                                              \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\commands\\lib\\command.py\", line 158, in <dictcomp>                                                              \n    library: lm.install(library, silent=silent, force=force)                                                                                                                        \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\package\\manager\\_install.py\", line 48, in install                                                              \n    pkg = self._install(                                                                                                                                                            \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\package\\manager\\library.py\", line 91, in _install                                                              \n    return super(LibraryPackageManager, self)._install(                                                                                                                             \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\package\\manager\\_install.py\", line 99, in _install                                                             \n    pkg = self.install_from_registry(spec, search_filters, silent=silent)                                                                                                           \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\package\\manager\\_registry.py\", line 88, in install_from_registry                                               \n    packages = self.search_registry_packages(spec, search_filters)                                                                                                                  \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\package\\manager\\_registry.py\", line 132, in search_registry_packages                                           \n    filters[\"names\"] = spec.name.lower()                                                                                                                                            \nAttributeError: 'NoneType' object has no attribute 'lower'                                                                                                                          \n                                                                                                                                                                                    \n============================================================                                                                                                                        \n                                                                                                                                                                                    \nAn unexpected error occurred. Further steps:                                                                                                                                        \n                                                                                                                                                                                    \n* Verify that you have the latest version of PlatformIO using                                                                                                                       \n  `pip install -U platformio` command                                                                                                                                               \n                                                                                                                                                                                    \n* Try to find answer in FAQ Troubleshooting section                                                                                                                                 \n  https://docs.platformio.org/page/faq.html                                                                                                                                         \n                                                                                                                                                                                    \n* Report this problem to the developers                                                                                                                                             \n  https://github.com/platformio/platformio-core/issues                                                                                                                              \n                                                                                                                                                                                    \n============================================================                                                                                                                        \n                                                                                                                                                                                    \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio                                                                                                                        \nUsage: pio [OPTIONS] COMMAND [ARGS]...                                                                                                                                              \n                                                                                                                                                                                    \nOptions:                                                                                                                                                                            \n  --version          Show the version and exit.                                                                                                                                     \n  -f, --force        DEPRECATE                                                                                                                                                      \n  -c, --caller TEXT  Caller ID (service)                                                                                                                                            \n  --no-ansi          Do not print ANSI control characters                                                                                                                           \n  -h, --help         Show this message and exit.                                                                                                                                    \n                                                                                                                                                                                    \nCommands:                                                                                                                                                                           \n  access    Manage resource access                                                                                                                                                  \n  account   Manage PlatformIO account                                                                                                                                               \n  boards    Embedded board explorer                                                                                                                                                 \n  check     Static code analysis                                                                                                                                                    \n  ci        Continuous integration                                                                                                                                                  \n  debug     Unified debugger                                                                                                                                                        \n  device    Device manager & serial/socket monitor                                                                                                                                  \n  home      GUI to manage PlatformIO                                                                                                                                                \n  lib       Library manager                                                                                                                                                         \n  org       Manage organizations                                                                                                                                                    \n  package   Package manager                                                                                                                                                         \n  platform  Platform manager                                                                                                                                                        \n  project   Project manager                                                                                                                                                         \n  remote    Remote development                                                                                                                                                      \n  run       Run project targets (build, upload, clean, etc.)                                                                                                                        \n  settings  Manage system settings                                                                                                                                                  \n  system    Miscellaneous system commands                                                                                                                                           \n  team      Manage organization teams                                                                                                                                               \n  test      Unit testing                                                                                                                                                            \n  update    Update installed platforms, packages and libraries                                                                                                                      \n  upgrade   Upgrade PlatformIO to the latest version                                                                                                                                \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio device                                                                                                                 \nUsage: pio device [OPTIONS] COMMAND [ARGS]...                                                                                                                                       \n                                                                                                                                                                                    \nOptions:                                                                                                                                                                            \n  -h, --help  Show this message and exit.                                                                                                                                           \n                                                                                                                                                                                    \nCommands:                                                                                                                                                                           \n  list     List devices                                                                                                                                                             \n  monitor  Monitor device (Serial)                                                                                                                                                  \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio device list                                                                                                            \nCOM1                                                                                                                                                                                \n----                                                                                                                                                                                \nHardware ID: ACPI\\PNP0501\\0                                                                                                                                                         \nDescription: Port de communication (COM1)                                                                                                                                           \n                                                                                                                                                                                    \nCOM11                                                                                                                                                                               \n-----                                                                                                                                                                               \nHardware ID: USB VID:PID=2341:8037 SER=HIDEF                                                                                                                                        \nDescription: Arduino Micro (COM11)                                                                                                                                                  \n                                                                                                                                                                                    \n                                                                                                                                                                                    \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio device list monitor COM11                                                                                              \nUsage: pio device list [OPTIONS]                                                                                                                                                    \nTry 'pio device list -h' for help.                                                                                                                                                  \n                                                                                                                                                                                    \nError: Got unexpected extra arguments (monitor COM11)                                                                                                                               \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio device monitor COM11                                                                                                   \nUsage: pio device monitor [OPTIONS]                                                                                                                                                 \nTry 'pio device monitor -h' for help.                                                                                                                                               \n                                                                                                                                                                                    \nError: Got unexpected extra argument (COM11)                                                                                                                                        \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio device monitor -h                                                                                                      \nUsage: pio device monitor [OPTIONS]                                                                                                                                                 \n                                                                                                                                                                                    \nOptions:                                                                                                                                                                            \n  -p, --port TEXT              Port, a number or a device name                                                                                                                      \n  -b, --baud INTEGER           Set baud rate, default=9600                                                                                                                          \n  --parity [N|E|O|S|M]         Set parity, default=N                                                                                                                                \n  --rtscts                     Enable RTS/CTS flow control, default=Off                                                                                                             \n  --xonxoff                    Enable software flow control, default=Off                                                                                                            \n  --rts INTEGER RANGE          Set initial RTS line state  [0<=x<=1]                                                                                                                \n  --dtr INTEGER RANGE          Set initial DTR line state  [0<=x<=1]                                                                                                                \n  --echo                       Enable local echo, default=Off                                                                                                                       \n  --encoding TEXT              Set the encoding for the serial port (e.g.                                                                                                           \n                               hexlify, Latin1, UTF-8), default: UTF-8                                                                                                              \n  -f, --filter TEXT            Add filters/text transformations                                                                                                                     \n  --eol [CR|LF|CRLF]           End of line mode, default=CRLF                                                                                                                       \n  --raw                        Do not apply any encodings/transformations                                                                                                           \n  --exit-char INTEGER          ASCII code of special character that is used to                                                                                                      \n                               exit the application, default=3 (Ctrl+C)                                                                                                             \n  --menu-char INTEGER          ASCII code of special character that is used to                                                                                                      \n                               control miniterm (menu), default=20 (DEC)                                                                                                            \n  --quiet                      Diagnostics: suppress non-error messages,                                                                                                            \n                               default=Off                                                                                                                                          \n  -d, --project-dir DIRECTORY                                                                                                                                                       \n  -e, --environment TEXT       Load configuration from `platformio.ini` and                                                                                                         \n                               specified environment                                                                                                                                \n  -h, --help                   Show this message and exit.                                                                                                                          \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio device monitor -p COM11 -b 115200                                                                                      \n--- Available filters and text transformations: colorize, debug, default, direct, hexlify, log2file, nocontrol, printable, send_on_enter, time                                      \n--- More details at http://bit.ly/pio-monitor-filters                                                                                                                               \n--- Miniterm on COM11  115200,8,N,1 ---                                                                                                                                             \n--- Quit: Ctrl+C | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H ---                                                                                                               \nPlay                                                                                                                                                                                \nPlay                                                                                                                                                                                \n                                                                                                                                                                                    \n--- exit ---                                                                                                                                                                        \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib search HID                                                                                                         \nFound 56 libraries:                                                                                                                                                                 \n                                                                                                                                                                                    \nUSBComposite for STM32F1                                                                                                                                                            \n========================                                                                                                                                                            \n#ID: 2052                                                                                                                                                                           \nUSB HID / MIDI / mass storage / Audio library for STM32F1                                                                                                                           \n                                                                                                                                                                                    \nKeywords: communication                                                                                                                                                             \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Various, arpruss@gmail.com                                                                                                                                                 \n                                                                                                                                                                                    \nMouse                                                                                                                                                                               \n=====                                                                                                                                                                               \n#ID: 890                                                                                                                                                                            \nAllows an Arduino/Genuino board with USB capabilites to act as a Mouse. This library plugs on the HID library. Can be used with or without other HID-based libraries (Keyboard, Game​‌​\npad etc)                                                                                                                                                                            \n                                                                                                                                                                                    \nKeywords: device, control                                                                                                                                                           \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Arduino                                                                                                                                                                    \n                                                                                                                                                                                    \nKeyboard                                                                                                                                                                            \n========                                                                                                                                                                            \n#ID: 891                                                                                                                                                                            \nAllows an Arduino/Genuino board with USB capabilites to act as a Keyboard. This library plugs on the HID library. It can be used with or without other HID-based libraries (Mouse, G​‌​\namepad etc)                                                                                                                                                                         \n                                                                                                                                                                                    \nKeywords: device, control                                                                                                                                                           \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Arduino                                                                                                                                                                    \n                                                                                                                                                                                    \nHID-Project                                                                                                                                                                         \n===========                                                                                                                                                                         \n#ID: 523                                                                                                                                                                            \nExtended HID Functions for Arduino. Includes BootKeyboard/Mouse, Consumer, System, Gamepad, RawHID and more features. Also compatible with Arduino Uno/Mega via HoodLoader2.        \n                                                                                                                                                                                    \nKeywords: communication                                                                                                                                                             \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: NicoHood                                                                                                                                                                   \n                                                                                                                                                                                    \nBLEPeripheral                                                                                                                                                                       \n=============                                                                                                                                                                       \n#ID: 259                                                                                                                                                                            \nArduino library for creating custom BLE peripherals. Supports nRF8001 and nRF51822 based boards/shields.                                                                            \n                                                                                                                                                                                    \nKeywords: ble, bluetooth, peripheral                                                                                                                                                \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Atmel AVR, Atmel SAM, Nordic nRF51, Teensy                                                                                                                    \nAuthors: Sandeep Mistry                                                                                                                                                             \n                                                                                                                                                                                    \nAdafruit TinyUSB Library                                                                                                                                                            \n========================                                                                                                                                                            \n#ID: 6465                                                                                                                                                                           \nTinyUSB library for Arduino. Support nRF5x, SAMD21, SAMD51, RP2040, ESP32-S2                                                                                                        \n                                                                                                                                                                                    \nKeywords: communication                                                                                                                                                             \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Infineon XMC, Kendryte K210, GigaDevice GD32V, ASR Microelectronics ASR650x, Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Microchip PIC32, Nordic nRF51,​‌​\n ST STM32, Teensy, TI MSP430, TI TIVA, Espressif 32, Nordic nRF52, ST STM8, Atmel megaAVR, Logic Green boards, HWLogic, LOGICROM Development Platform, Raspberry Pi RP2040          \nAuthors: Adafruit                                                                                                                                                                   \n                                                                                                                                                                                    \nJoystick                                                                                                                                                                            \n========                                                                                                                                                                            \n#ID: 6628                                                                                                                                                                           \nAllows an Arduino board with USB capabilities (e.g. Leonardo, Arduino Micro, Arudino Due, etc.) to appear as a Joystick or Gamepad. This library is built on the PluggableUSB librar​‌​\ny. It can be used with or without other HID-based libraries (Mouse, Keyboard, etc.).                                                                                                \n                                                                                                                                                                                    \nKeywords: device, control                                                                                                                                                           \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Atmel AVR, Atmel SAM                                                                                                                                          \nAuthors: Matthew Heironimus                                                                                                                                                         \n                                                                                                                                                                                    \nUSB-Host-Shield-20                                                                                                                                                                  \n==================                                                                                                                                                                  \n#ID: 59                                                                                                                                                                             \nRevision 2.0 of MAX3421E-based USB Host Shield Library                                                                                                                              \n                                                                                                                                                                                    \nKeywords: usb, host, ftdi, adk, acm, pl2303, hid, bluetooth, spp, ps3, ps4, ps5, buzz, xbox, wii, switch pro, mass storage                                                          \nCompatible frameworks: Arduino, Standard Peripheral Library                                                                                                                         \nCompatible platforms: Atmel AVR, Atmel SAM, Espressif 8266, Intel ARC32, Nordic nRF51, ST STM32, Teensy, Espressif 32, Nordic nRF52                                                 \nAuthors: Oleg Mazurov, Alexei Glushchenko, Kristian Sloth Lauszus, Andrew Kroll                                                                                                     \n                                                                                                                                                                                    \nCh376msc                                                                                                                                                                            \n========                                                                                                                                                                            \n#ID: 6708                                                                                                                                                                           \nA library for CH376 file manager control chip. Supports UART and SPI communication with the chip, read/write text files to USB flash drive and SD card.                             \n                                                                                                                                                                                    \nKeywords: data, storage                                                                                                                                                             \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Atmel AVR, Atmel SAM, Espressif 8266, ST STM32, Espressif 32                                                                                                  \nAuthors: György Kovács                                                                                                                                                              \n                                                                                                                                                                                    \nUSBHost                                                                                                                                                                             \n=======                                                                                                                                                                             \n#ID: 885                                                                                                                                                                            \nAllows the communication with USB peripherals like mice, keyboards, and thumbdrives. The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communi​‌​\ncate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.    \n                                                                                                                                                                                    \nKeywords: device, control                                                                                                                                                           \nCompatible frameworks: Arduino                                                                                                                                                      \nCompatible platforms: Atmel SAM                                                                                                                                                     \nAuthors: Arduino                                                                                                                                                                    \n                                                                                                                                                                                    \nShow next libraries? [y/N]: N                                                                                                                                                       \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install Keyboard                                                                                                   \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps\\micro                                                                                        \nLibrary Manager: Installing Keyboard                                                                                                                                                \nDownloading  [####################################]  100%                                                                                                                           \nUnpacking  [####################################]  100%                                                                                                                             \nLibrary Manager: Keyboard @ 1.0.2 has been installed!                                                                                                                               \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio                                                                                                                        \nUsage: pio [OPTIONS] COMMAND [ARGS]...                                                                                                                                              \n                                                                                                                                                                                    \nOptions:                                                                                                                                                                            \n  --version          Show the version and exit.                                                                                                                                     \n  -f, --force        DEPRECATE                                                                                                                                                      \n  -c, --caller TEXT  Caller ID (service)                                                                                                                                            \n  --no-ansi          Do not print ANSI control characters                                                                                                                           \n  -h, --help         Show this message and exit.                                                                                                                                    \n                                                                                                                                                                                    \nCommands:                                                                                                                                                                           \n  access    Manage resource access                                                                                                                                                  \n  account   Manage PlatformIO account                                                                                                                                               \n  boards    Embedded board explorer                                                                                                                                                 \n  check     Static code analysis                                                                                                                                                    \n  ci        Continuous integration                                                                                                                                                  \n  debug     Unified debugger                                                                                                                                                        \n  device    Device manager & serial/socket monitor                                                                                                                                  \n  home      GUI to manage PlatformIO                                                                                                                                                \n  lib       Library manager                                                                                                                                                         \n  org       Manage organizations                                                                                                                                                    \n  package   Package manager                                                                                                                                                         \n  platform  Platform manager                                                                                                                                                        \n  project   Project manager                                                                                                                                                         \n  remote    Remote development                                                                                                                                                      \n  run       Run project targets (build, upload, clean, etc.)                                                                                                                        \n  settings  Manage system settings                                                                                                                                                  \n  system    Miscellaneous system commands                                                                                                                                           \n  team      Manage organization teams                                                                                                                                               \n  test      Unit testing                                                                                                                                                            \n  update    Update installed platforms, packages and libraries                                                                                                                      \n  upgrade   Upgrade PlatformIO to the latest version                                                                                                                                \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run build                                                                                                              \nUsage: pio run [OPTIONS]                                                                                                                                                            \nTry 'pio run -h' for help.                                                                                                                                                          \n                                                                                                                                                                                    \nError: Got unexpected extra argument (build)                                                                                                                                        \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run build -h                                                                                                           \nUsage: pio run [OPTIONS]                                                                                                                                                            \n                                                                                                                                                                                    \nOptions:                                                                                                                                                                            \n  -e, --environment TEXT                                                                                                                                                            \n  -t, --target TEXT                                                                                                                                                                 \n  --upload-port TEXT                                                                                                                                                                \n  -d, --project-dir PATH                                                                                                                                                            \n  -c, --project-conf FILE                                                                                                                                                           \n  -j, --jobs INTEGER       Allow N jobs at once. Default is a number of CPUs                                                                                                        \n                           in a system (N=16)                                                                                                                                       \n  -s, --silent                                                                                                                                                                      \n  -v, --verbose                                                                                                                                                                     \n  --disable-auto-clean                                                                                                                                                              \n  --list-targets                                                                                                                                                                    \n  -h, --help               Show this message and exit.                                                                                                                              \n                                                                                                                                                                                    \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run                                                                                                                    \nProcessing micro (platform: atmelavr; board: micro; framework: arduino)                                                                                                             \n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------​‌​\n                                                                                                                                                                                    \nVerbose mode can be enabled via `-v, --verbose` option                                                                                                                              \nCONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html                                                                                                          \nPLATFORM: Atmel AVR (3.4.0) > Arduino Micro                                                                                                                                         \nHARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash                                                                                                                                  \nDEBUG: Current (simavr) On-board (simavr)                                                                                                                                           \nPACKAGES:                                                                                                                                                                           \n - framework-arduino-avr 5.1.0                                                                                                                                                      \n - toolchain-atmelavr 1.70300.191015 (7.3.0)                                                                                                                                        \nLDF: Library Dependency Finder -> http://bit.ly/configure-pio-ldf                                                                                                                   \nLDF Modes: Finder ~ chain, Compatibility ~ soft                                                                                                                                     \nFound 15 compatible libraries                                                                                                                                                       \nScanning dependencies...                                                                                                                                                            \nDependency Graph                                                                                                                                                                    \n|-- <FastLED> 3.4.0                                                                                                                                                                 \n|-- <HID-Project> 2.8.2                                                                                                                                                             \n|-- <Yet Another Arduino PcInt Library> 2.1.0                                                                                                                                       \n|-- <Encoder> 1.4.1                                                                                                                                                                 \n|-- <Keyboard> 1.0.2                                                                                                                                                                \nBuilding in release mode                                                                                                                                                            \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\FastLED.cpp.o                                                                                                                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\bitswap.cpp.o                                                                                                                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorpalettes.cpp.o                                                                                                                       \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorutils.cpp.o                                                                                                                          \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\hsv2rgb.cpp.o                                                                                                                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\lib8tion.cpp.o                                                                                                                            \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\noise.cpp.o                                                                                                                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms.cpp.o                                                                                                                           \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms\\esp\\32\\clockless_rmt_esp32.cpp.o                                                                                                \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\power_mgt.cpp.o                                                                                                                           \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\wiring.cpp.o                                                                                                                              \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o                                                                                                       \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o                                                                                                            \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o                                                                                                             \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o                                                                                                    \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o                                                                                                       \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\NKROKeyboard.cpp.o                                                                                                        \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\AbsoluteMouse.cpp:24:0:                                                                                        \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\AbsoluteMouse.h:28:10: fatal error: HID.h: No such file or directory                                                                 \n                                                                                                                                                                                    \n*************************************************************                                                                                                                       \n* Looking for HID.h dependency? Check our library registry!                                                                                                                         \n*                                                                                                                                                                                   \n* CLI  > platformio lib search \"header:HID.h\"                                                                                                                                       \n* Web  > https://platformio.org/lib/search?query=header:HID.h                                                                                                                       \n*                                                                                                                                                                                   \n*************************************************************                                                                                                                       \n                                                                                                                                                                                    \n #include \"HID.h\"                                                                                                                                                                   \n          ^~~~~~~                                                                                                                                                                   \ncompilation terminated.                                                                                                                                                             \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Gamepad.cpp:24:0:                                                                                              \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Gamepad.h:28:10: fatal error: HID.h: No such file or directory                                                                       \n                                                                                                                                                                                    \n*************************************************************                                                                                                                       \n* Looking for HID.h dependency? Check our library registry!                                                                                                                         \n*                                                                                                                                                                                   \n* CLI  > platformio lib search \"header:HID.h\"                                                                                                                                       \n* Web  > https://platformio.org/lib/search?query=header:HID.h                                                                                                                       \n*                                                                                                                                                                                   \n*************************************************************                                                                                                                       \n                                                                                                                                                                                    \n #include \"HID.h\"                                                                                                                                                                   \n          ^~~~~~~                                                                                                                                                                   \ncompilation terminated.                                                                                                                                                             \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o] Error 1                                                                                                   \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o] Error 1                                                                                                         \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Consumer.cpp:24:0:                                                                                             \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Consumer.h:28:10: fatal error: HID.h: No such file or directory                                                                      \n                                                                                                                                                                                    \n*************************************************************                                                                                                                       \n* Looking for HID.h dependency? Check our library registry!                                                                                                                         \n*                                                                                                                                                                                   \n* CLI  > platformio lib search \"header:HID.h\"                                                                                                                                       \n* Web  > https://platformio.org/lib/search?query=header:HID.h                                                                                                                       \n*                                                                                                                                                                                   \n*************************************************************                                                                                                                       \n                                                                                                                                                                                    \n #include \"HID.h\"                                                                                                                                                                   \n          ^~~~~~~                                                                                                                                                                   \ncompilation terminated.                                                                                                                                                             \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.cpp:24:0:                                                                                     \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.h:28:10: fatal error: HID.h: No such file or directory                                                              \n                                                                                                                                                                                    \n*************************************************************                                                                                                                       \n* Looking for HID.h dependency? Check our library registry!                                                                                                                         \n*                                                                                                                                                                                   \n* CLI  > platformio lib search \"header:HID.h\"                                                                                                                                       \n* Web  > https://platformio.org/lib/search?query=header:HID.h                                                                                                                       \n*                                                                                                                                                                                   \n*************************************************************                                                                                                                       \n                                                                                                                                                                                    \n #include \"HID.h\"                                                                                                                                                                   \n          ^~~~~~~                                                                                                                                                                   \ncompilation terminated.                                                                                                                                                             \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedMouse.cpp:24:0:                                                                                        ​‌​\n:24:0:                                                                                .h: No such file or directory                                                                 \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedMouse.h:28:10: fatal error: HID                                                                                              ​‌​\n.h: No such file or directory                                                                                                                                                       \n                                                                                                                                                                                    \n*************************************************************                                                                                                                       \n* Looking for HID.h dependency? Check our library registry!                                                                                                                         \n*                                                                                                                                                                                   \n* CLI  > platformio lib search \"header:HID.h\"                                                                                                                                       \n* Web  > https://platformio.org/lib/search?query=header:HID.h                                                                                                                       \n*                                                                                                                                                                                   \n*************************************************************                                                                                                                       \n                                                                                                                                                                                    \n #include \"HID.h\"                                                                                                                                                                   \n          ^~~~~~~                                                                                                                                                                   \ncompilation terminated.                                                                                                                                                             \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o] Error 1                                                                                                        \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o] Error 1     24:0:                                                                                         \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o] Error 1  h: No such file or directory                                                                  \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.cpp:                                                                                              ​‌​\n24:0:                                                                                                                                                                               \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.h:28:10: fatal error: HID.                                                                                              ​‌​\nh: No such file or directory                                                                                                                                                        \n                                                                                                                                                                                    \n*************************************************************                                                                                                                       \n* Looking for HID.h dependency? Check our library registry!                                                                                                                         \n*                                                                                                                                                                                   \n* CLI  > platformio lib search \"header:HID.h\"                                                                                                                                       \n* Web  > https://platformio.org/lib/search?query=header:HID.h                                                                                                                       \n*                                                                                                                                                                                   \n*************************************************************                                                                                                                       \n                                                                                                                                                                                    \n #include \"HID.h\"                                                                     Took 1.70 seconds ============================================================================\n          ^~~~~~~                                                                                                                                                                   \ncompilation terminated.                                                                                                                                                             \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\NKROKeyboard.cpp.o] Error 1                                                                                                    \n============================================================================ [FAILED] \nTook 1.70 seconds ====================================================================​‌​\n========                                                                              \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run                      \nProcessing micro (platform: atmelavr; board: micro; framework: arduino)               \n--------------------------------------------------------------------------------------​‌​\n                                                                                      \nVerbose mode can be enabled via `-v, --verbose` option                                \nCONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html            \nPLATFORM: Atmel AVR (3.4.0) > Arduino Micro                                           \nHARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash                                    \nDEBUG: Current (simavr) On-board (simavr)                                             \nPACKAGES:                                                                             \n - framework-arduino-avr 5.1.0                                                        \n - toolchain-atmelavr 1.70300.191015 (7.3.0)                                          \nLDF: Library Dependency Finder -> http://bit.ly/configure-pio-ldf                     \nLDF Modes: Finder ~ chain, Compatibility ~ soft                                       \nFound 15 compatible libraries                                                         \nScanning dependencies...                                                              \nDependency Graph                                                                      \n|-- <FastLED> 3.4.0                                                                   \n|-- <HID-Project> 2.8.2                                                               \n|-- <Yet Another Arduino PcInt Library> 2.1.0                                         \n|-- <Encoder> 1.4.1                                                                   \nBuilding in release mode                                                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\FastLED.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\bitswap.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorpalettes.cpp.o                         \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorutils.cpp.o                            \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\hsv2rgb.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\lib8tion.cpp.o                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\noise.cpp.o                                 \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms\\esp\\32\\clockless_rmt_esp32.cpp.o  \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\power_mgt.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\wiring.cpp.o                                \nCompiling .pio\\build\\micro\\src\\main.cpp.o                                             \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o              \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o      \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\NKROKeyboard.cpp.o          \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\ncpp:24:0:                                                                             \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.h:28:10: fatal error: \nHID.h: No such file or directory                                                      \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Consumer.cpp:24:0​‌​\n:                                                                                     \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Consumer.h:28:10: fatal error: HID.h: N​‌​\no such file or directory                                                              \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Gamepad.cpp:24:0:​‌​\n                                                                                      \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Gamepad.h:28:10: fatal error: HID.h: No​‌​\n such file or directory                                                               \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\AbsoluteMouse.cpp​‌​\n:24:0:                                                                                \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\AbsoluteMouse.h:28:10: fatal error: HID​‌​\n.h: No such file or directory                                                         \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o] Error 1           \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o] Error 1          \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o] Error 1     \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o] Error 1  \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedMouse.cpp​‌​\n:24:0:                                                                                \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedMouse.h:28:10: fatal error: HID​‌​\n.h: No such file or directory                                                         \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o] Error 1     \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.cpp:​‌​\n24:0:                                                                                 \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.h:28:10: fatal error: HID.​‌​\nh: No such file or directory                                                          \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\NKROKeyboard.cpp.o] Error 1      \n============================= [FAILED] Took 1.70 seconds =============================​‌​\n                                                                                      \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run                      \nProcessing micro (platform: atmelavr; board: micro; framework: arduino)               \n--------------------------------------------------------------------------------------​‌​\n                                                                                      \nVerbose mode can be enabled via `-v, --verbose` option                                \nCONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html            \nPLATFORM: Atmel AVR (3.4.0) > Arduino Micro                                           \nHARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash                                    \nDEBUG: Current (simavr) On-board (simavr)                                             \nPACKAGES:                                                                             \n - framework-arduino-avr 5.1.0                                                        \n - toolchain-atmelavr 1.70300.191015 (7.3.0)                                          \nLDF: Library Dependency Finder -> http://bit.ly/configure-pio-ldf                     \nLDF Modes: Finder ~ chain, Compatibility ~ soft                                       \nLibrary Manager: Installing Mouse                                                     \nLibrary Manager: Warning! More than one package has been found by Mouse requirements: \n - arduino-libraries/Mouse @ 1.0.1                                                    \n - mbed-the-a-team/Mouse @ 0.0.0+sha.11b4710b30c2                                     \nLibrary Manager: Please specify detailed REQUIREMENTS using package owner and version \n(showed above) to avoid name conflicts                                                \n                                                                                      \nDownloading  [------------------------------------]    0%                             \nDownloading  [####################################]  100%                             \n                                                                                      \nUnpacking  [------------------------------------]    0%                               \nUnpacking  [#####-------------------------------]   14%                               \nUnpacking  [##########--------------------------]   28%                               \nUnpacking  [###############---------------------]   42%                               \nUnpacking  [####################----------------]   57%                               \nUnpacking  [#########################-----------]   71%                               \nUnpacking  [##############################------]   85%                               \nUnpacking  [####################################]  100%                               \nLibrary Manager: Mouse @ 1.0.1 has been installed!                                    \nFound 16 compatible libraries                                                         \nScanning dependencies...                                                              \nDependency Graph                                                                      \n|-- <Keyboard> 1.0.2                                                                  \n|-- <Mouse> 1.0.1                                                                     \n|-- <FastLED> 3.4.0                                                                   \n|-- <Yet Another Arduino PcInt Library> 2.1.0                                         \n|-- <Encoder> 1.4.1                                                                   \n|-- <HID-Project> 2.8.2                                                               \nBuilding in release mode                                                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\FastLED.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\bitswap.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorpalettes.cpp.o                         \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorutils.cpp.o                            \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\hsv2rgb.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\lib8tion.cpp.o                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\noise.cpp.o                                 \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms\\esp\\32\\clockless_rmt_esp32.cpp.o  \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\power_mgt.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\wiring.cpp.o                                \nCompiling .pio\\build\\micro\\src\\main.cpp.o                                             \nCompiling .pio\\build\\micro\\lib0da\\Keyboard\\Keyboard.cpp.o                             \nCompiling .pio\\build\\micro\\lib7ab\\Mouse\\Mouse.cpp.o                                   \nCompiling .pio\\build\\micro\\libe00\\Yet Another Arduino PcInt Library\\YetAnotherPcInt.cp​‌​\np.o                                                                                   \nCompiling .pio\\build\\micro\\lib165\\Encoder\\Encoder.cpp.o                               \nIn file included from .pio\\libdeps\\micro\\Mouse\\src\\Mouse.cpp:22:0:                    \n.pio\\libdeps\\micro\\Mouse\\src\\Mouse.h:25:10: fatal error: HID.h: No such file or direct​‌​\nory                                                                                   \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o         \n*** [.pio\\build\\micro\\lib7ab\\Mouse\\Mouse.cpp.o] Error 1                               \nIn file included from .pio\\libdeps\\micro\\Keyboard\\src\\Keyboard.cpp:22:0:              \n.pio\\libdeps\\micro\\Keyboard\\src\\Keyboard.h:25:10: fatal error: HID.h: No such file or \ndirectory                                                                             \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \n*** [.pio\\build\\micro\\lib0da\\Keyboard\\Keyboard.cpp.o] Error 1                         \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp: In funct​‌​\nion 'void __vector_9()':                                                              \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:38:20: wa​‌​\nrning: unused variable 'callbacks' [-Wunused-variable]                                \n     PcIntCallback* callbacks = port.callbacks; \\                                     \n                    ^                                                                 \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:64:1: not​‌​\ne: in expansion of macro 'IMPLEMENT_ISR'                                              \n IMPLEMENT_ISR(port0, PCINT0_vect, PCMSK0, PCINT_INPUT_PORT0)                         \n ^~~~~~~~~~~~~                                                                        \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\AbsoluteMouse.cpp​‌​\n:24:0:                                                                                \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\AbsoluteMouse.h:28:10: fatal error: HID​‌​\n.h: No such file or directory                                                         \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o] Error 1     \n============================= [FAILED] Took 3.42 seconds =============================​‌​\n                                                                                      \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib                      \nUsage: pio lib [OPTIONS] COMMAND [ARGS]...                                            \n                                                                                      \nOptions:                                                                              \n  -d, --storage-dir DIRECTORY  Manage custom library storage                          \n  -g, --global                 Manage global PlatformIO library storage               \n  -e, --environment TEXT       Manage libraries for the specific project build        \n                               environments declared in `platformio.ini`              \n  -h, --help                   Show this message and exit.                            \n                                                                                      \nCommands:                                                                             \n  builtin    List built-in libraries                                                  \n  install    Install library                                                          \n  list       List installed libraries                                                 \n  register   Deprecated                                                               \n  search     Search for a library                                                     \n  show       Show detailed info about a library                                       \n  stats      Library Registry Statistics                                              \n  uninstall  Remove libraries                                                         \n  update     Update installed libraries                                               \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib builtin              \nframework-arduino-avr                                                                 \n*********************                                                                 \n                                                                                      \nEEPROM                                                                                \n======                                                                                \nEnables reading and writing to the permanent board storage. This library allows to rea​‌​\nd and write data in a memory type, the EEPROM, that keeps its content also when the bo​‌​\nard is powered off. The amount of EEPROM available depends on the microcontroller type​‌​\n.                                                                                     \n                                                                                      \nVersion: 2.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/EEPROM                                   \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino, Christopher Andrews                                                 \n                                                                                      \nHID                                                                                   \n===                                                                                   \nModule for PluggableUSB infrastructure. Exposes an API for devices like Keyboards, Mic​‌​\ne and Gamepads.                                                                       \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/HID                                      \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino                                                                      \n                                                                                      \nSPI                                                                                   \n===                                                                                   \nEnables the communication with devices that use the Serial Peripheral Interface (SPI) \nBus. SPI is a synchronous serial data protocol used by microcontrollers for communicat​‌​\ning with one or more peripheral devices quickly over short distances. It uses three li​‌​\nnes common to all devices (MISO, MOSI and SCK) and one specific for each device.      \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/SPI                                      \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino                                                                      \n                                                                                      \nSoftwareSerial                                                                        \n==============                                                                        \nEnables serial communication on any digital pin. The SoftwareSerial library has been d​‌​\neveloped to allow serial communication on any digital pin of the board, using software​‌​\n to replicate the functionality of the hardware UART. It is possible to have multiple \nsoftware serial ports with speeds up to 115200 bps.                                   \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/SoftwareSerial                           \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino                                                                      \n                                                                                      \nWire                                                                                  \n====                                                                                  \nThis library allows you to communicate with I2C and Two Wire Interface devices. It all​‌​\nows the communication with I2C devices like temperature sensors, realtime clocks and m​‌​\nany others using SDA (Data Line) and SCL (Clock Line).                                \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/Wire                                     \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino                                                                      \n                                                                                      \nframework-arduinoespressif32                                                          \n****************************                                                          \n                                                                                      \nArduinoOTA                                                                            \n==========                                                                            \nEnables Over The Air upgrades, via wifi and espota.py UDP request/TCP download. With t​‌​\nhis library you can enable your sketch to be upgraded over network. Includes mdns anou​‌​\nnces to get discovered by the arduino IDE.                                            \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Ivan Grokhotkov and Hristo Gochkov, Hristo Gochkov                           \n                                                                                      \nBluetoothSerial                                                                       \n===============                                                                       \nSimple UART to Classical Bluetooth bridge for ESP32                                   \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Evandro Copercini                                                            \n                                                                                      \nDNSServer                                                                             \n=========                                                                             \nA simple DNS server for ESP32. This library implements a simple DNS server.           \n                                                                                      \nVersion: 1.1.0                                                                        \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Kristijan Novoselić                                                          \n                                                                                      \nEEPROM                                                                                \n======                                                                                \nEnables reading and writing data a sequential, addressable FLASH storage              \n                                                                                      \nVersion: 1.0.3                                                                        \nHomepage: http://arduino.cc/en/Reference/EEPROM                                       \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Ivan Grokhotkov, Paolo Becchi                                                \n                                                                                      \nESP32                                                                                 \n=====                                                                                 \nESP32 sketches examples                                                               \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: other                                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nESP32 Async UDP                                                                       \n===============                                                                       \nAsync UDP Library for ESP32                                                           \n                                                                                      \nVersion: 1.0.0                                                                        \nKeywords: other                                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: *                                                               \nAuthors: Me-No-Dev                                                                    \n                                                                                      \nESP32 Azure IoT Arduino                                                               \n=======================                                                               \nAzure IoT library for ESP32. This library provides an implementation of Azure IoT libr​‌​\nary.                                                                                  \n                                                                                      \nVersion: 0.1.0                                                                        \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Microsoft                                                                    \n                                                                                      \nESP32 BLE Arduino                                                                     \n=================                                                                     \nBLE functions for ESP32. This library provides an implementation Bluetooth Low Energy \nsupport for the ESP32 using the Arduino platform.                                     \n                                                                                      \nVersion: 1.0.1                                                                        \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Neil Kolban, Dariusz Krempa                                                  \n                                                                                      \nESPmDNS                                                                               \n=======                                                                               \nESP32 mDNS Library                                                                    \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nFFat                                                                                  \n====                                                                                  \nESP32 FAT on Flash File System                                                        \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov, Larry Bernstone                              \n                                                                                      \nFS                                                                                    \n==                                                                                    \nESP32 File System                                                                     \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nHTTPClient                                                                            \n==========                                                                            \nHTTP Client for ESP32                                                                 \n                                                                                      \nVersion: 1.2                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Markus Sattler                                                               \n                                                                                      \nHTTPUpdate                                                                            \n==========                                                                            \nHttp Update for ESP32                                                                 \n                                                                                      \nVersion: 1.3                                                                          \nKeywords: data, processing                                                            \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Markus Sattler                                                               \n                                                                                      \nHTTPUpdateServer                                                                      \n================                                                                      \nSimple HTTP Update server based on the WebServer. The library accepts HTTP post reques​‌​\nts to the /update url, and updates the ESP32 firmware.                                \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Kapanakov                                                             \n                                                                                      \nNetBIOS                                                                               \n=======                                                                               \nEnables NBNS (NetBIOS) name resolution. With this library you can connect to your ESP \nfrom Windows using a short name                                                       \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.xpablo.cz/?p=751#more-751                                        \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Pablo@xpablo.cz, Hristo Gochkov                                              \n                                                                                      \nPreferences                                                                           \n===========                                                                           \nProvides friendly access to ESP32's Non-Volatile Storage                              \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nSD(esp32)                                                                             \n=========                                                                             \nEnables reading and writing on SD cards. For all Arduino boards. Once an SD memory car​‌​\nd is connected to the SPI interfare of the Arduino board you are enabled to create fil​‌​\nes and read/write on them. You can also move through directories on the SD card.      \n                                                                                      \nVersion: 1.0.5                                                                        \nHomepage: http://www.arduino.cc/en/Reference/SD                                       \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Arduino, SparkFun                                                            \n                                                                                      \nSD_MMC                                                                                \n======                                                                                \nESP32 SDMMC File System                                                               \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nSPI                                                                                   \n===                                                                                   \nEnables the communication with devices that use the Serial Peripheral Interface (SPI) \nBus. For all Arduino boards, BUT Arduino DUE.                                         \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://arduino.cc/en/Reference/SPI                                          \nKeywords: signal, input, output                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nSPIFFS                                                                                \n======                                                                                \nESP32 SPIFFS File System                                                              \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nSimpleBLE                                                                             \n=========                                                                             \nProvides really simple BLE advertizer with just on and off                            \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nTicker                                                                                \n======                                                                                \nAllows to call functions with a given interval.                                       \n                                                                                      \nVersion: 1.1                                                                          \nKeywords: timing                                                                      \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Bert Melis, Hristo Gochkov                                                   \n                                                                                      \nUpdate                                                                                \n======                                                                                \nESP32 Sketch Update Library                                                           \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: other                                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nWebServer                                                                             \n=========                                                                             \nSimple web server library. The library supports HTTP GET and POST requests, provides a​‌​\nrgument parsing, handles one client at a time.                                        \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Ivan Grokhotkov, Ivan Grokhtkov                                              \n                                                                                      \nWiFi                                                                                  \n====                                                                                  \nEnables network connection (local and Internet) using the ESP32 built-in WiFi. With th​‌​\nis library you can instantiate Servers, Clients and send/receive UDP packets through W​‌​\niFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP ad​‌​\ndress can be assigned statically or through a DHCP. The library can also manage DNS.  \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nWiFiClientSecure                                                                      \n================                                                                      \nEnables secure network connection (local and Internet) using the ESP32 built-in WiFi. \nWith this library you can make a TLS or SSL connection to a remote server.            \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Evandro Luis Copercini, Github Community                                     \n                                                                                      \nWiFiProv                                                                              \n========                                                                              \nEnables provisioning. With this library you can perform provisioning on esp32 via Soft​‌​\nAP or BLE.                                                                            \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Switi Mhaiske, Hristo Gochkov                                                \n                                                                                      \nWire                                                                                  \n====                                                                                  \nAllows the communication between devices or sensors connected via Two Wire Interface B​‌​\nus. For esp8266 boards.                                                               \n                                                                                      \nVersion: 1.0.1                                                                        \nHomepage: http://arduino.cc/en/Reference/Wire                                         \nKeywords: signal, input, output                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib builtin -h           \nUsage: pio lib builtin [OPTIONS]                                                      \n                                                                                      \nOptions:                                                                              \n  --storage TEXT                                                                      \n  --json-output                                                                       \n  -h, --help      Show this message and exit.                                         \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib builtin --json-output​‌​\n                                                                                      \n[{\"name\": \"framework-arduino-avr\", \"path\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\f​‌​\nramework-arduino-avr\\\\libraries\", \"items\": [{\"name\": \"EEPROM\", \"version\": \"2.0\", \"sent​‌​\nence\": \"Enables reading and writing to the permanent board storage.\", \"paragraph\": \"Th​‌​\nis library allows to read and write data in a memory type, the EEPROM, that keeps its \ncontent also when the board is powered off. The amount of EEPROM available depends on \nthe microcontroller type.\", \"category\": \"Data Storage\", \"url\": \"http://www.arduino.cc/​‌​\nen/Reference/EEPROM\", \"architectures\": \"avr\", \"frameworks\": [\"arduino\"], \"homepage\": \"​‌​\nhttp://www.arduino.cc/en/Reference/EEPROM\", \"description\": \"Enables reading and writin​‌​\ng to the permanent board storage. This library allows to read and write data in a memo​‌​\nry type, the EEPROM, that keeps its content also when the board is powered off. The am​‌​\nount of EEPROM available depends on the microcontroller type.\", \"platforms\": [\"atmelav​‌​\nr\"], \"keywords\": [\"data\", \"storage\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\"​‌​\n, \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Arduino\", \"maintainer\": true,​‌​\n \"email\": \"info@arduino.cc\"}, {\"name\": \"Christopher Andrews\"}], \"__pkg_dir\": \"C:\\\\User​‌​\ns\\\\guill\\\\.platformio\\\\packages\\\\framework-arduino-avr\\\\libraries\\\\EEPROM\"}, {\"name\": \n\"HID\", \"version\": \"1.0\", \"sentence\": \"Module for PluggableUSB infrastructure. Exposes \nan API for devices like Keyboards, Mice and Gamepads.\", \"category\": \"Communication\", \"​‌​\nurl\": \"http://www.arduino.cc/en/Reference/HID\", \"architectures\": \"avr\", \"frameworks\": \n[\"arduino\"], \"homepage\": \"http://www.arduino.cc/en/Reference/HID\", \"description\": \"Mod​‌​\nule for PluggableUSB infrastructure. Exposes an API for devices like Keyboards, Mice a​‌​\nnd Gamepads.\", \"platforms\": [\"atmelavr\"], \"keywords\": [\"communication\"], \"export\": {\"e​‌​\nxclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"na​‌​\nme\": \"Arduino\", \"maintainer\": true, \"email\": \"info@arduino.cc\"}], \"__pkg_dir\": \"C:\\\\Us​‌​\ners\\\\guill\\\\.platformio\\\\packages\\\\framework-arduino-avr\\\\libraries\\\\HID\"}, {\"name\": \"​‌​\nSPI\", \"version\": \"1.0\", \"sentence\": \"Enables the communication with devices that use t​‌​\nhe Serial Peripheral Interface (SPI) Bus.\", \"paragraph\": \"SPI is a synchronous serial \ndata protocol used by microcontrollers for communicating with one or more peripheral d​‌​\nevices quickly over short distances. It uses three lines common to all devices (MISO, \nMOSI and SCK) and one specific for each device.\", \"category\": \"Communication\", \"url\": \n\"http://www.arduino.cc/en/Reference/SPI\", \"architectures\": \"avr\", \"frameworks\": [\"ardu​‌​\nino\"], \"homepage\": \"http://www.arduino.cc/en/Reference/SPI\", \"description\": \"Enables t​‌​\nhe communication with devices that use the Serial Peripheral Interface (SPI) Bus. SPI \nis a synchronous serial data protocol used by microcontrollers for communicating with \none or more peripheral devices quickly over short distances. It uses three lines commo​‌​\nn to all devices (MISO, MOSI and SCK) and one specific for each device.\", \"platforms\":​‌​\n [\"atmelavr\"], \"keywords\": [\"communication\"], \"export\": {\"exclude\": [\"extras\", \"docs\",​‌​\n \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Arduino\", \"maintainer​‌​\n\": true, \"email\": \"info@arduino.cc\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\pa​‌​\nckages\\\\framework-arduino-avr\\\\libraries\\\\SPI\"}, {\"name\": \"SoftwareSerial\", \"version\":​‌​\n \"1.0\", \"sentence\": \"Enables serial communication on any digital pin.\", \"paragraph\": \"​‌​\nThe SoftwareSerial library has been developed to allow serial communication on any dig​‌​\nital pin of the board, using software to replicate the functionality of the hardware U​‌​\nART. It is possible to have multiple software serial ports with speeds up to 115200 bp​‌​\ns.\", \"category\": \"Communication\", \"url\": \"http://www.arduino.cc/en/Reference/SoftwareS​‌​\nerial\", \"architectures\": \"avr\", \"frameworks\": [\"arduino\"], \"homepage\": \"http://www.ard​‌​\nuino.cc/en/Reference/SoftwareSerial\", \"description\": \"Enables serial communication on \nany digital pin. The SoftwareSerial library has been developed to allow serial communi​‌​\ncation on any digital pin of the board, using software to replicate the functionality \nof the hardware UART. It is possible to have multiple software serial ports with speed​‌​\ns up to 115200 bps.\", \"platforms\": [\"atmelavr\"], \"keywords\": [\"communication\"], \"expor​‌​\nt\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\"​‌​\n: [{\"name\": \"Arduino\", \"maintainer\": true, \"email\": \"info@arduino.cc\"}], \"__pkg_dir\": \n\"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduino-avr\\\\libraries\\\\SoftwareSe​‌​\nrial\"}, {\"name\": \"Wire\", \"version\": \"1.0\", \"sentence\": \"This library allows you to com​‌​\nmunicate with I2C and Two Wire Interface devices.\", \"paragraph\": \"It allows the commun​‌​\nication with I2C devices like temperature sensors, realtime clocks and many others usi​‌​\nng SDA (Data Line) and SCL (Clock Line).\", \"category\": \"Communication\", \"url\": \"http:/​‌​\n/www.arduino.cc/en/Reference/Wire\", \"architectures\": \"avr\", \"frameworks\": [\"arduino\"],​‌​\n \"homepage\": \"http://www.arduino.cc/en/Reference/Wire\", \"description\": \"This library a​‌​\nllows you to communicate with I2C and Two Wire Interface devices. It allows the commun​‌​\nication with I2C devices like temperature sensors, realtime clocks and many others usi​‌​\nng SDA (Data Line) and SCL (Clock Line).\", \"platforms\": [\"atmelavr\"], \"keywords\": [\"co​‌​\nmmunication\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\",​‌​\n \"*.pdf\"]}, \"authors\": [{\"name\": \"Arduino\", \"maintainer\": true, \"email\": \"info@arduino​‌​\n.cc\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduino-avr\\\\​‌​\nlibraries\\\\Wire\"}]}, {\"name\": \"framework-arduinoespressif32\", \"path\": \"C:\\\\Users\\\\guil​‌​\nl\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\", \"items\": [{\"name\":​‌​\n \"ArduinoOTA\", \"version\": \"1.0\", \"sentence\": \"Enables Over The Air upgrades, via wifi \nand espota.py UDP request/TCP download.\", \"paragraph\": \"With this library you can enab​‌​\nle your sketch to be upgraded over network. Includes mdns anounces to get discovered b​‌​\ny the arduino IDE.\", \"category\": \"Communication\", \"architectures\": \"esp32\", \"framework​‌​\ns\": [\"arduino\"], \"description\": \"Enables Over The Air upgrades, via wifi and espota.py​‌​\n UDP request/TCP download. With this library you can enable your sketch to be upgraded​‌​\n over network. Includes mdns anounces to get discovered by the arduino IDE.\", \"platfor​‌​\nms\": [\"espressif32\"], \"keywords\": [\"communication\"], \"export\": {\"exclude\": [\"extras\", \n\"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Ivan Grokhotko​‌​\nv and Hristo Gochkov\"}, {\"name\": \"Hristo Gochkov\", \"email\": \"hristo@espressif.com\", \"m​‌​\naintainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-a​‌​\nrduinoespressif32\\\\libraries\\\\ArduinoOTA\"}, {\"name\": \"ESP32 Async UDP\", \"version\": \"1.​‌​\n0.0\", \"sentence\": \"Async UDP Library for ESP32\", \"paragraph\": \"Async UDP Library for E​‌​\nSP32\", \"category\": \"Other\", \"url\": \"https://github.com/me-no-dev/ESPAsyncUDP\", \"archit​‌​\nectures\": \"*\", \"frameworks\": [\"arduino\"], \"repository\": {\"type\": \"git\", \"url\": \"https:​‌​\n//github.com/me-no-dev/ESPAsyncUDP.git\"}, \"description\": \"Async UDP Library for ESP32\"​‌​\n, \"platforms\": [\"*\"], \"keywords\": [\"other\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \n\"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Me-No-Dev\", \"maintaine​‌​\nr\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoes​‌​\npressif32\\\\libraries\\\\AsyncUDP\"}, {\"name\": \"ESP32 Azure IoT Arduino\", \"version\": \"0.1.​‌​\n0\", \"sentence\": \"Azure IoT library for ESP32\", \"paragraph\": \"This library provides an \nimplementation of Azure IoT library.\", \"category\": \"Communication\", \"url\": \"https://gi​‌​\nthub.com/VSChina/ESP32_AzureIoT_Arduino\", \"architectures\": \"esp32\", \"frameworks\": [\"ar​‌​\nduino\"], \"repository\": {\"type\": \"git\", \"url\": \"https://github.com/VSChina/ESP32_AzureI​‌​\noT_Arduino.git\"}, \"description\": \"Azure IoT library for ESP32. This library provides a​‌​\nn implementation of Azure IoT library.\", \"platforms\": [\"espressif32\"], \"keywords\": [\"c​‌​\nommunication\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\"​‌​\n, \"*.pdf\"]}, \"authors\": [{\"name\": \"Microsoft\", \"maintainer\": true}], \"__pkg_dir\": \"C:\\​‌​\n\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\AzureIo​‌​\nT\"}, {\"name\": \"ESP32 BLE Arduino\", \"version\": \"1.0.1\", \"sentence\": \"BLE functions for \nESP32\", \"paragraph\": \"This library provides an implementation Bluetooth Low Energy sup​‌​\nport for the ESP32 using the Arduino platform.\", \"category\": \"Communication\", \"url\": \"​‌​\nhttps://github.com/nkolban/ESP32_BLE_Arduino\", \"architectures\": \"esp32\", \"includes\": \"​‌​\nBLEDevice.h, BLEUtils.h, BLEScan.h, BLEAdvertisedDevice.h\", \"frameworks\": [\"arduino\"],​‌​\n \"repository\": {\"type\": \"git\", \"url\": \"https://github.com/nkolban/ESP32_BLE_Arduino.gi​‌​\nt\"}, \"description\": \"BLE functions for ESP32. This library provides an implementation \nBluetooth Low Energy support for the ESP32 using the Arduino platform.\", \"platforms\": \n[\"espressif32\"], \"keywords\": [\"communication\"], \"export\": {\"exclude\": [\"extras\", \"docs​‌​\n\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Neil Kolban\", \"emai​‌​\nl\": \"kolban1@kolban.com\"}, {\"name\": \"Dariusz Krempa\", \"email\": \"esp32@esp32.eu.org\", \"​‌​\nmaintainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-​‌​\narduinoespressif32\\\\libraries\\\\BLE\"}, {\"name\": \"BluetoothSerial\", \"version\": \"1.0\", \"s​‌​\nentence\": \"Simple UART to Classical Bluetooth bridge for ESP32\", \"category\": \"Communic​‌​\nation\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"description\": \"Simple UA​‌​\nRT to Classical Bluetooth bridge for ESP32\", \"platforms\": [\"espressif32\"], \"keywords\":​‌​\n [\"communication\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyf​‌​\nile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Evandro Copercini\", \"maintainer\": true}], \"__pk​‌​\ng_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\librar​‌​\nies\\\\BluetoothSerial\"}, {\"name\": \"DNSServer\", \"version\": \"1.1.0\", \"sentence\": \"A simpl​‌​\ne DNS server for ESP32.\", \"paragraph\": \"This library implements a simple DNS server.\",​‌​\n \"category\": \"Communication\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"de​‌​\nscription\": \"A simple DNS server for ESP32. This library implements a simple DNS serve​‌​\nr.\", \"platforms\": [\"espressif32\"], \"keywords\": [\"communication\"], \"export\": {\"exclude\"​‌​\n: [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"K​‌​\nristijan Novoseli\\u0107\", \"maintainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platf​‌​\normio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\DNSServer\"}, {\"name\": \"EEPRO​‌​\nM\", \"version\": \"1.0.3\", \"sentence\": \"Enables reading and writing data a sequential, ad​‌​\ndressable FLASH storage\", \"category\": \"Data Storage\", \"url\": \"http://arduino.cc/en/Ref​‌​\nerence/EEPROM\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"homepage\": \"http​‌​\n://arduino.cc/en/Reference/EEPROM\", \"description\": \"Enables reading and writing data a​‌​\n sequential, addressable FLASH storage\", \"platforms\": [\"espressif32\"], \"keywords\": [\"d​‌​\nata\", \"storage\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfil​‌​\ne\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Ivan Grokhotkov\"}, {\"name\": \"Paolo Becchi\", \"emai​‌​\nl\": \"pbecchi@aerobusiness.it\", \"maintainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.​‌​\nplatformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\EEPROM\"}, {\"name\": \"ESP​‌​\n32\", \"version\": \"1.0\", \"sentence\": \"ESP32 sketches examples\", \"category\": \"Other\", \"ar​‌​\nchitectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"description\": \"ESP32 sketches examp​‌​\nles\", \"platforms\": [\"espressif32\"], \"keywords\": [\"other\"], \"export\": {\"exclude\": [\"ext​‌​\nras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Hristo G​‌​\nochkov\", \"maintainer\": true, \"email\": \"hristo@espressif.com\"}, {\"name\": \"Ivan Grokhtko​‌​\nv\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressi​‌​\nf32\\\\libraries\\\\ESP32\"}, {\"name\": \"ESPmDNS\", \"version\": \"1.0\", \"sentence\": \"ESP32 mDNS​‌​\n Library\", \"category\": \"Communication\", \"architectures\": \"esp32\", \"frameworks\": [\"ardu​‌​\nino\"], \"description\": \"ESP32 mDNS Library\", \"platforms\": [\"espressif32\"], \"keywords\": \n[\"communication\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfi​‌​\nle\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Hristo Gochkov\", \"maintainer\": true, \"email\": \"h​‌​\nristo@espressif.com\"}, {\"name\": \"Ivan Grokhtkov\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.p​‌​\nlatformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\ESPmDNS\"}, {\"name\": \"FFa​‌​\nt\", \"version\": \"1.0\", \"sentence\": \"ESP32 FAT on Flash File System\", \"category\": \"Data \nStorage\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"description\": \"ESP32 F​‌​\nAT on Flash File System\", \"platforms\": [\"espressif32\"], \"keywords\": [\"data\", \"storage\"​‌​\n], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \n\"authors\": [{\"name\": \"Hristo Gochkov\", \"maintainer\": true, \"email\": \"hristo@espressif.​‌​\ncom\"}, {\"name\": \"Ivan Grokhtkov\"}, {\"name\": \"Larry Bernstone\"}], \"__pkg_dir\": \"C:\\\\Use​‌​\nrs\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\FFat\"}, {\"n​‌​\name\": \"FS\", \"version\": \"1.0\", \"sentence\": \"ESP32 File System\", \"category\": \"Data Stora​‌​\nge\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"description\": \"ESP32 File S​‌​\nystem\", \"platforms\": [\"espressif32\"], \"keywords\": [\"data\", \"storage\"], \"export\": {\"exc​‌​\nlude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name​‌​\n\": \"Hristo Gochkov\", \"maintainer\": true, \"email\": \"hristo@espressif.com\"}, {\"name\": \"I​‌​\nvan Grokhtkov\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-ard​‌​\nuinoespressif32\\\\libraries\\\\FS\"}, {\"name\": \"HTTPClient\", \"version\": \"1.2\", \"sentence\":​‌​\n \"HTTP Client for ESP32\", \"category\": \"Communication\", \"url\": \"https://github.com/espr​‌​\nessif/arduino-esp32/tree/master/libraries/HTTPClient\", \"architectures\": \"esp32\", \"fram​‌​\neworks\": [\"arduino\"], \"repository\": {\"type\": \"git\", \"url\": \"https://github.com/espress​‌​\nif/arduino-esp32/tree/master/libraries/HTTPClient.git\"}, \"description\": \"HTTP Client f​‌​\nor ESP32\", \"platforms\": [\"espressif32\"], \"keywords\": [\"communication\"], \"export\": {\"ex​‌​\nclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"nam​‌​\ne\": \"Markus Sattler\", \"maintainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformi​‌​\no\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\HTTPClient\"}, {\"name\": \"HTTPUpda​‌​\nte\", \"version\": \"1.3\", \"sentence\": \"Http Update for ESP32\", \"category\": \"Data Processi​‌​\nng\", \"url\": \"https://github.com/Links2004/Arduino/tree/esp8266/hardware/esp8266com/esp​‌​\n8266/libraries/ESP8266httpUpdate\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"]​‌​\n, \"repository\": {\"type\": \"git\", \"url\": \"https://github.com/Links2004/Arduino/tree/esp8​‌​\n266/hardware/esp8266com/esp8266/libraries/ESP8266httpUpdate.git\"}, \"description\": \"Htt​‌​\np Update for ESP32\", \"platforms\": [\"espressif32\"], \"keywords\": [\"data\", \"processing\"],​‌​\n \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"a​‌​\nuthors\": [{\"name\": \"Markus Sattler\", \"maintainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\gu​‌​\nill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\HTTPUpdate\"}, {\"n​‌​\name\": \"HTTPUpdateServer\", \"version\": \"1.0\", \"sentence\": \"Simple HTTP Update server bas​‌​\ned on the WebServer\", \"paragraph\": \"The library accepts HTTP post requests to the /upd​‌​\nate url, and updates the ESP32 firmware.\", \"category\": \"Communication\", \"architectures​‌​\n\": \"esp32\", \"frameworks\": [\"arduino\"], \"description\": \"Simple HTTP Update server based​‌​\n on the WebServer. The library accepts HTTP post requests to the /update url, and upda​‌​\ntes the ESP32 firmware.\", \"platforms\": [\"espressif32\"], \"keywords\": [\"communication\"],​‌​\n \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"a​‌​\nuthors\": [{\"name\": \"Hristo Kapanakov\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\​‌​\npackages\\\\framework-arduinoespressif32\\\\libraries\\\\HTTPUpdateServer\"}, {\"name\": \"NetBI​‌​\nOS\", \"version\": \"1.0\", \"sentence\": \"Enables NBNS (NetBIOS) name resolution.\", \"paragra​‌​\nph\": \"With this library you can connect to your ESP from Windows using a short name\", \n\"category\": \"Communication\", \"url\": \"http://www.xpablo.cz/?p=751#more-751\", \"architect​‌​\nures\": \"esp32\", \"frameworks\": [\"arduino\"], \"homepage\": \"http://www.xpablo.cz/?p=751#mo​‌​\nre-751\", \"description\": \"Enables NBNS (NetBIOS) name resolution. With this library you​‌​\n can connect to your ESP from Windows using a short name\", \"platforms\": [\"espressif32\"​‌​\n], \"keywords\": [\"communication\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"t​‌​\nest\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Pablo@xpablo.cz\"}, {\"name\": \"Hris​‌​\nto Gochkov\", \"email\": \"hristo@espressif.com\", \"maintainer\": true}], \"__pkg_dir\": \"C:\\\\​‌​\nUsers\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\NetBIOS\"​‌​\n}, {\"name\": \"Preferences\", \"version\": \"1.0\", \"sentence\": \"Provides friendly access to \nESP32's Non-Volatile Storage\", \"category\": \"Data Storage\", \"architectures\": \"esp32\", \"​‌​\nframeworks\": [\"arduino\"], \"description\": \"Provides friendly access to ESP32's Non-Vola​‌​\ntile Storage\", \"platforms\": [\"espressif32\"], \"keywords\": [\"data\", \"storage\"], \"export\"​‌​\n: {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": \n[{\"name\": \"Hristo Gochkov\", \"maintainer\": true, \"email\": \"hristo@espressif.com\"}], \"__​‌​\npkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libr​‌​\naries\\\\Preferences\"}, {\"name\": \"SD(esp32)\", \"version\": \"1.0.5\", \"sentence\": \"Enables r​‌​\neading and writing on SD cards. For all Arduino boards.\", \"paragraph\": \"Once an SD mem​‌​\nory card is connected to the SPI interfare of the Arduino board you are enabled to cre​‌​\nate files and read/write on them. You can also move through directories on the SD card​‌​\n.\", \"category\": \"Data Storage\", \"url\": \"http://www.arduino.cc/en/Reference/SD\", \"archi​‌​\ntectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"homepage\": \"http://www.arduino.cc/en/R​‌​\neference/SD\", \"description\": \"Enables reading and writing on SD cards. For all Arduino​‌​\n boards. Once an SD memory card is connected to the SPI interfare of the Arduino board​‌​\n you are enabled to create files and read/write on them. You can also move through dir​‌​\nectories on the SD card.\", \"platforms\": [\"espressif32\"], \"keywords\": [\"data\", \"storage​‌​\n\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]},​‌​\n \"authors\": [{\"name\": \"Arduino\", \"maintainer\": true, \"email\": \"info@arduino.cc\"}, {\"na​‌​\nme\": \"SparkFun\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-ar​‌​\nduinoespressif32\\\\libraries\\\\SD\"}, {\"name\": \"SD_MMC\", \"version\": \"1.0\", \"sentence\": \"E​‌​\nSP32 SDMMC File System\", \"category\": \"Data Storage\", \"architectures\": \"esp32\", \"framew​‌​\norks\": [\"arduino\"], \"description\": \"ESP32 SDMMC File System\", \"platforms\": [\"espressif​‌​\n32\"], \"keywords\": [\"data\", \"storage\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests​‌​\n\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Hristo Gochkov\", \"maintainer​‌​\n\": true, \"email\": \"hristo@espressif.com\"}, {\"name\": \"Ivan Grokhtkov\"}], \"__pkg_dir\": \"​‌​\nC:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\SD_M​‌​\nMC\"}, {\"name\": \"SPI\", \"version\": \"1.0\", \"sentence\": \"Enables the communication with de​‌​\nvices that use the Serial Peripheral Interface (SPI) Bus. For all Arduino boards, BUT \nArduino DUE.\", \"category\": \"Signal Input/Output\", \"url\": \"http://arduino.cc/en/Referen​‌​\nce/SPI\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"homepage\": \"http://ardu​‌​\nino.cc/en/Reference/SPI\", \"description\": \"Enables the communication with devices that \nuse the Serial Peripheral Interface (SPI) Bus. For all Arduino boards, BUT Arduino DUE​‌​\n.\", \"platforms\": [\"espressif32\"], \"keywords\": [\"signal\", \"input\", \"output\"], \"export\":​‌​\n {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [​‌​\n{\"name\": \"Hristo Gochkov\", \"maintainer\": true, \"email\": \"hristo@espressif.com\"}], \"__p​‌​\nkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libra​‌​\nries\\\\SPI\"}, {\"name\": \"SPIFFS\", \"version\": \"1.0\", \"sentence\": \"ESP32 SPIFFS File Syste​‌​\nm\", \"category\": \"Data Storage\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"​‌​\ndescription\": \"ESP32 SPIFFS File System\", \"platforms\": [\"espressif32\"], \"keywords\": [\"​‌​\ndata\", \"storage\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfi​‌​\nle\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Hristo Gochkov\", \"maintainer\": true, \"email\": \"h​‌​\nristo@espressif.com\"}, {\"name\": \"Ivan Grokhtkov\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.p​‌​\nlatformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\SPIFFS\"}, {\"name\": \"Simp​‌​\nleBLE\", \"version\": \"1.0\", \"sentence\": \"Provides really simple BLE advertizer with just​‌​\n on and off\", \"category\": \"Communication\", \"architectures\": \"esp32\", \"frameworks\": [\"a​‌​\nrduino\"], \"description\": \"Provides really simple BLE advertizer with just on and off\",​‌​\n \"platforms\": [\"espressif32\"], \"keywords\": [\"communication\"], \"export\": {\"exclude\": [\"​‌​\nextras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Hrist​‌​\no Gochkov\", \"maintainer\": true, \"email\": \"hristo@espressif.com\"}], \"__pkg_dir\": \"C:\\\\U​‌​\nsers\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\SimpleBLE​‌​\n\"}, {\"name\": \"Ticker\", \"version\": \"1.1\", \"sentence\": \"Allows to call functions with a \ngiven interval.\", \"category\": \"Timing\", \"architectures\": \"esp32\", \"frameworks\": [\"ardu​‌​\nino\"], \"description\": \"Allows to call functions with a given interval.\", \"platforms\": \n[\"espressif32\"], \"keywords\": [\"timing\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tes​‌​\nts\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Bert Melis\"}, {\"name\": \"Hr​‌​\nisto Gochkov\", \"email\": \"hristo@espressif.com\", \"maintainer\": true}], \"__pkg_dir\": \"C:​‌​\n\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libraries\\\\Ticker​‌​\n\"}, {\"name\": \"Update\", \"version\": \"1.0\", \"sentence\": \"ESP32 Sketch Update Library\", \"c​‌​\nategory\": \"Other\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"description\":​‌​\n \"ESP32 Sketch Update Library\", \"platforms\": [\"espressif32\"], \"keywords\": [\"other\"], \"​‌​\nexport\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"aut​‌​\nhors\": [{\"name\": \"Hristo Gochkov\", \"maintainer\": true, \"email\": \"hristo@espressif.com\"​‌​\n}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif3​‌​\n2\\\\libraries\\\\Update\"}, {\"name\": \"WebServer\", \"version\": \"1.0\", \"sentence\": \"Simple we​‌​\nb server library\", \"paragraph\": \"The library supports HTTP GET and POST requests, prov​‌​\nides argument parsing, handles one client at a time.\", \"category\": \"Communication\", \"a​‌​\nrchitectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"description\": \"Simple web server l​‌​\nibrary. The library supports HTTP GET and POST requests, provides argument parsing, ha​‌​\nndles one client at a time.\", \"platforms\": [\"espressif32\"], \"keywords\": [\"communicatio​‌​\nn\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}​‌​\n, \"authors\": [{\"name\": \"Ivan Grokhotkov\"}, {\"name\": \"Ivan Grokhtkov\", \"email\": \"ivan@e​‌​\nsp8266.com\", \"maintainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packag​‌​\nes\\\\framework-arduinoespressif32\\\\libraries\\\\WebServer\"}, {\"name\": \"WiFi\", \"version\": \n\"1.0\", \"sentence\": \"Enables network connection (local and Internet) using the ESP32 bu​‌​\nilt-in WiFi.\", \"paragraph\": \"With this library you can instantiate Servers, Clients an​‌​\nd send/receive UDP packets through WiFi. The shield can connect either to open or encr​‌​\nypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP​‌​\n. The library can also manage DNS.\", \"category\": \"Communication\", \"architectures\": \"es​‌​\np32\", \"frameworks\": [\"arduino\"], \"description\": \"Enables network connection (local and​‌​\n Internet) using the ESP32 built-in WiFi. With this library you can instantiate Server​‌​\ns, Clients and send/receive UDP packets through WiFi. The shield can connect either to​‌​\n open or encrypted networks (WEP, WPA). The IP address can be assigned statically or t​‌​\nhrough a DHCP. The library can also manage DNS.\", \"platforms\": [\"espressif32\"], \"keywo​‌​\nrds\": [\"communication\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.​‌​\ndoxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Hristo Gochkov\", \"maintainer\": true, \"emai​‌​\nl\": \"hristo@espressif.com\"}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\f​‌​\nramework-arduinoespressif32\\\\libraries\\\\WiFi\"}, {\"name\": \"WiFiClientSecure\", \"version\"​‌​\n: \"1.0\", \"sentence\": \"Enables secure network connection (local and Internet) using the​‌​\n ESP32 built-in WiFi.\", \"paragraph\": \"With this library you can make a TLS or SSL conn​‌​\nection to a remote server.\", \"category\": \"Communication\", \"architectures\": \"esp32\", \"f​‌​\nrameworks\": [\"arduino\"], \"description\": \"Enables secure network connection (local and \nInternet) using the ESP32 built-in WiFi. With this library you can make a TLS or SSL c​‌​\nonnection to a remote server.\", \"platforms\": [\"espressif32\"], \"keywords\": [\"communicat​‌​\nion\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"​‌​\n]}, \"authors\": [{\"name\": \"Evandro Luis Copercini\"}, {\"name\": \"Github Community\", \"main​‌​\ntainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-ardu​‌​\ninoespressif32\\\\libraries\\\\WiFiClientSecure\"}, {\"name\": \"WiFiProv\", \"version\": \"1.0\", \n\"sentence\": \"Enables provisioning.\", \"paragraph\": \"With this library you can perform p​‌​\nrovisioning on esp32 via SoftAP or BLE.\", \"category\": \"Communication\", \"architectures\"​‌​\n: \"esp32\", \"frameworks\": [\"arduino\"], \"description\": \"Enables provisioning. With this \nlibrary you can perform provisioning on esp32 via SoftAP or BLE.\", \"platforms\": [\"espr​‌​\nessif32\"], \"keywords\": [\"communication\"], \"export\": {\"exclude\": [\"extras\", \"docs\", \"te​‌​\nsts\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": [{\"name\": \"Switi Mhaiske\", \"email\": \n\"sweetymhaiske@gmail.com\"}, {\"name\": \"Hristo Gochkov\", \"email\": \"hristo@espressif.com\"​‌​\n, \"maintainer\": true}], \"__pkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framewo​‌​\nrk-arduinoespressif32\\\\libraries\\\\WiFiProv\"}, {\"name\": \"Wire\", \"version\": \"1.0.1\", \"se​‌​\nntence\": \"Allows the communication between devices or sensors connected via Two Wire I​‌​\nnterface Bus. For esp8266 boards.\", \"category\": \"Signal Input/Output\", \"url\": \"http://​‌​\narduino.cc/en/Reference/Wire\", \"architectures\": \"esp32\", \"frameworks\": [\"arduino\"], \"h​‌​\nomepage\": \"http://arduino.cc/en/Reference/Wire\", \"description\": \"Allows the communicat​‌​\nion between devices or sensors connected via Two Wire Interface Bus. For esp8266 board​‌​\ns.\", \"platforms\": [\"espressif32\"], \"keywords\": [\"signal\", \"input\", \"output\"], \"export\"​‌​\n: {\"exclude\": [\"extras\", \"docs\", \"tests\", \"test\", \"*.doxyfile\", \"*.pdf\"]}, \"authors\": \n[{\"name\": \"Hristo Gochkov\", \"maintainer\": true, \"email\": \"hristo@espressif.com\"}], \"__​‌​\npkg_dir\": \"C:\\\\Users\\\\guill\\\\.platformio\\\\packages\\\\framework-arduinoespressif32\\\\libr​‌​\naries\\\\Wire\"}]}]                                                                      \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib builtin              \nframework-arduino-avr                                                                 \n*********************                                                                 \n                                                                                      \nEEPROM                                                                                \n======                                                                                \nEnables reading and writing to the permanent board storage. This library allows to rea​‌​\nd and write data in a memory type, the EEPROM, that keeps its content also when the bo​‌​\nard is powered off. The amount of EEPROM available depends on the microcontroller type​‌​\n.                                                                                     \n                                                                                      \nVersion: 2.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/EEPROM                                   \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino, Christopher Andrews                                                 \n                                                                                      \nHID                                                                                   \n===                                                                                   \nModule for PluggableUSB infrastructure. Exposes an API for devices like Keyboards, Mic​‌​\ne and Gamepads.                                                                       \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/HID                                      \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino                                                                      \n                                                                                      \nSPI                                                                                   \n===                                                                                   \nEnables the communication with devices that use the Serial Peripheral Interface (SPI) \nBus. SPI is a synchronous serial data protocol used by microcontrollers for communicat​‌​\ning with one or more peripheral devices quickly over short distances. It uses three li​‌​\nnes common to all devices (MISO, MOSI and SCK) and one specific for each device.      \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/SPI                                      \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino                                                                      \n                                                                                      \nSoftwareSerial                                                                        \n==============                                                                        \nEnables serial communication on any digital pin. The SoftwareSerial library has been d​‌​\neveloped to allow serial communication on any digital pin of the board, using software​‌​\n to replicate the functionality of the hardware UART. It is possible to have multiple \nsoftware serial ports with speeds up to 115200 bps.                                   \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/SoftwareSerial                           \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino                                                                      \n                                                                                      \nWire                                                                                  \n====                                                                                  \nThis library allows you to communicate with I2C and Two Wire Interface devices. It all​‌​\nows the communication with I2C devices like temperature sensors, realtime clocks and m​‌​\nany others using SDA (Data Line) and SCL (Clock Line).                                \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.arduino.cc/en/Reference/Wire                                     \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: atmelavr                                                        \nAuthors: Arduino                                                                      \n                                                                                      \nframework-arduinoespressif32                                                          \n****************************                                                          \n                                                                                      \nArduinoOTA                                                                            \n==========                                                                            \nEnables Over The Air upgrades, via wifi and espota.py UDP request/TCP download. With t​‌​\nhis library you can enable your sketch to be upgraded over network. Includes mdns anou​‌​\nnces to get discovered by the arduino IDE.                                            \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Ivan Grokhotkov and Hristo Gochkov, Hristo Gochkov                           \n                                                                                      \nBluetoothSerial                                                                       \n===============                                                                       \nSimple UART to Classical Bluetooth bridge for ESP32                                   \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Evandro Copercini                                                            \n                                                                                      \nDNSServer                                                                             \n=========                                                                             \nA simple DNS server for ESP32. This library implements a simple DNS server.           \n                                                                                      \nVersion: 1.1.0                                                                        \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Kristijan Novoselić                                                          \n                                                                                      \nEEPROM                                                                                \n======                                                                                \nEnables reading and writing data a sequential, addressable FLASH storage              \n                                                                                      \nVersion: 1.0.3                                                                        \nHomepage: http://arduino.cc/en/Reference/EEPROM                                       \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Ivan Grokhotkov, Paolo Becchi                                                \n                                                                                      \nESP32                                                                                 \n=====                                                                                 \nESP32 sketches examples                                                               \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: other                                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nESP32 Async UDP                                                                       \n===============                                                                       \nAsync UDP Library for ESP32                                                           \n                                                                                      \nVersion: 1.0.0                                                                        \nKeywords: other                                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: *                                                               \nAuthors: Me-No-Dev                                                                    \n                                                                                      \nESP32 Azure IoT Arduino                                                               \n=======================                                                               \nAzure IoT library for ESP32. This library provides an implementation of Azure IoT libr​‌​\nary.                                                                                  \n                                                                                      \nVersion: 0.1.0                                                                        \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Microsoft                                                                    \n                                                                                      \nESP32 BLE Arduino                                                                     \n=================                                                                     \nBLE functions for ESP32. This library provides an implementation Bluetooth Low Energy \nsupport for the ESP32 using the Arduino platform.                                     \n                                                                                      \nVersion: 1.0.1                                                                        \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Neil Kolban, Dariusz Krempa                                                  \n                                                                                      \nESPmDNS                                                                               \n=======                                                                               \nESP32 mDNS Library                                                                    \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nFFat                                                                                  \n====                                                                                  \nESP32 FAT on Flash File System                                                        \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov, Larry Bernstone                              \n                                                                                      \nFS                                                                                    \n==                                                                                    \nESP32 File System                                                                     \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nHTTPClient                                                                            \n==========                                                                            \nHTTP Client for ESP32                                                                 \n                                                                                      \nVersion: 1.2                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Markus Sattler                                                               \n                                                                                      \nHTTPUpdate                                                                            \n==========                                                                            \nHttp Update for ESP32                                                                 \n                                                                                      \nVersion: 1.3                                                                          \nKeywords: data, processing                                                            \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Markus Sattler                                                               \n                                                                                      \nHTTPUpdateServer                                                                      \n================                                                                      \nSimple HTTP Update server based on the WebServer. The library accepts HTTP post reques​‌​\nts to the /update url, and updates the ESP32 firmware.                                \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Kapanakov                                                             \n                                                                                      \nNetBIOS                                                                               \n=======                                                                               \nEnables NBNS (NetBIOS) name resolution. With this library you can connect to your ESP \nfrom Windows using a short name                                                       \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://www.xpablo.cz/?p=751#more-751                                        \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Pablo@xpablo.cz, Hristo Gochkov                                              \n                                                                                      \nPreferences                                                                           \n===========                                                                           \nProvides friendly access to ESP32's Non-Volatile Storage                              \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nSD(esp32)                                                                             \n=========                                                                             \nEnables reading and writing on SD cards. For all Arduino boards. Once an SD memory car​‌​\nd is connected to the SPI interfare of the Arduino board you are enabled to create fil​‌​\nes and read/write on them. You can also move through directories on the SD card.      \n                                                                                      \nVersion: 1.0.5                                                                        \nHomepage: http://www.arduino.cc/en/Reference/SD                                       \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Arduino, SparkFun                                                            \n                                                                                      \nSD_MMC                                                                                \n======                                                                                \nESP32 SDMMC File System                                                               \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nSPI                                                                                   \n===                                                                                   \nEnables the communication with devices that use the Serial Peripheral Interface (SPI) \nBus. For all Arduino boards, BUT Arduino DUE.                                         \n                                                                                      \nVersion: 1.0                                                                          \nHomepage: http://arduino.cc/en/Reference/SPI                                          \nKeywords: signal, input, output                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nSPIFFS                                                                                \n======                                                                                \nESP32 SPIFFS File System                                                              \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: data, storage                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov, Ivan Grokhtkov                                               \n                                                                                      \nSimpleBLE                                                                             \n=========                                                                             \nProvides really simple BLE advertizer with just on and off                            \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nTicker                                                                                \n======                                                                                \nAllows to call functions with a given interval.                                       \n                                                                                      \nVersion: 1.1                                                                          \nKeywords: timing                                                                      \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Bert Melis, Hristo Gochkov                                                   \n                                                                                      \nUpdate                                                                                \n======                                                                                \nESP32 Sketch Update Library                                                           \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: other                                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nWebServer                                                                             \n=========                                                                             \nSimple web server library. The library supports HTTP GET and POST requests, provides a​‌​\nrgument parsing, handles one client at a time.                                        \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Ivan Grokhotkov, Ivan Grokhtkov                                              \n                                                                                      \nWiFi                                                                                  \n====                                                                                  \nEnables network connection (local and Internet) using the ESP32 built-in WiFi. With th​‌​\nis library you can instantiate Servers, Clients and send/receive UDP packets through W​‌​\niFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP ad​‌​\ndress can be assigned statically or through a DHCP. The library can also manage DNS.  \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \nWiFiClientSecure                                                                      \n================                                                                      \nEnables secure network connection (local and Internet) using the ESP32 built-in WiFi. \nWith this library you can make a TLS or SSL connection to a remote server.            \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Evandro Luis Copercini, Github Community                                     \n                                                                                      \nWiFiProv                                                                              \n========                                                                              \nEnables provisioning. With this library you can perform provisioning on esp32 via Soft​‌​\nAP or BLE.                                                                            \n                                                                                      \nVersion: 1.0                                                                          \nKeywords: communication                                                               \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Switi Mhaiske, Hristo Gochkov                                                \n                                                                                      \nWire                                                                                  \n====                                                                                  \nAllows the communication between devices or sensors connected via Two Wire Interface B​‌​\nus. For esp8266 boards.                                                               \n                                                                                      \nVersion: 1.0.1                                                                        \nHomepage: http://arduino.cc/en/Reference/Wire                                         \nKeywords: signal, input, output                                                       \nCompatible frameworks: arduino                                                        \nCompatible platforms: espressif32                                                     \nAuthors: Hristo Gochkov                                                               \n                                                                                      \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install Keyboard     \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps​‌​\n\\micro                                                                                \nLibrary Manager: Keyboard @ 1.0.2 is already installed                                \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install Mouse        \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps​‌​\n\\micro                                                                                \nLibrary Manager: Mouse @ 1.0.1 is already installed                                   \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run                      \nProcessing micro (platform: atmelavr; board: micro; framework: arduino)               \n--------------------------------------------------------------------------------------​‌​\n                                                                                      \nVerbose mode can be enabled via `-v, --verbose` option                                \nCONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html            \nPLATFORM: Atmel AVR (3.4.0) > Arduino Micro                                           \nHARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash                                    \nDEBUG: Current (simavr) On-board (simavr)                                             \nPACKAGES:                                                                             \n - framework-arduino-avr 5.1.0                                                        \n - toolchain-atmelavr 1.70300.191015 (7.3.0)                                          \nLDF: Library Dependency Finder -> http://bit.ly/configure-pio-ldf                     \nLDF Modes: Finder ~ chain, Compatibility ~ soft                                       \nFound 16 compatible libraries                                                         \nScanning dependencies...                                                              \nDependency Graph                                                                      \n|-- <FastLED> 3.4.0                                                                   \n|-- <Yet Another Arduino PcInt Library> 2.1.0                                         \n|-- <Encoder> 1.4.1                                                                   \n|-- <HID-Project> 2.8.2                                                               \n|-- <Keyboard> 1.0.2                                                                  \n|-- <Mouse> 1.0.1                                                                     \nBuilding in release mode                                                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\FastLED.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\bitswap.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorpalettes.cpp.o                         \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorutils.cpp.o                            \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\hsv2rgb.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\lib8tion.cpp.o                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\noise.cpp.o                                 \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms\\esp\\32\\clockless_rmt_esp32.cpp.o  \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\power_mgt.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\wiring.cpp.o                                \nCompiling .pio\\build\\micro\\src\\main.cpp.o                                             \nCompiling .pio\\build\\micro\\libe00\\Yet Another Arduino PcInt Library\\YetAnotherPcInt.cp​‌​\np.o                                                                                   \nCompiling .pio\\build\\micro\\lib165\\Encoder\\Encoder.cpp.o                               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o              \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o               \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp: In funct​‌​\nion 'void __vector_9()':                                                              \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:38:20: wa​‌​\nrning: unused variable 'callbacks' [-Wunused-variable]                                \n     PcIntCallback* callbacks = port.callbacks; \\                                     \n                    ^                                                                 \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:64:1: not​‌​\ne: in expansion of macro 'IMPLEMENT_ISR'                                              \n IMPLEMENT_ISR(port0, PCINT0_vect, PCMSK0, PCINT_INPUT_PORT0)                         \n ^~~~~~~~~~~~~                                                                        \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o      \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\AbsoluteMouse.cpp​‌​\n:24:0:                                                                                \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\AbsoluteMouse.h:28:10: fatal error: HID​‌​\n.h: No such file or directory                                                         \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Consumer.cpp:24:0​‌​\n:                                                                                     \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Consumer.h:28:10: fatal error: HID.h: N​‌​\no such file or directory                                                              \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o         \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o] Error 1     \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o] Error 1          \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Gamepad.cpp:24:0:​‌​\n                                                                                      \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\Gamepad.h:28:10: fatal error: HID.h: No​‌​\n such file or directory                                                               \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o] Error 1           \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\ncpp:24:0:                                                                             \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.h:28:10: fatal error: \nHID.h: No such file or directory                                                      \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o] Error 1  \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedMouse.cpp​‌​\n:24:0:                                                                                \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedMouse.h:28:10: fatal error: HID​‌​\n.h: No such file or directory                                                         \n                                                                                      \n*************************************************************                         \n* Looking for HID.h dependency? Check our library registry!                           \n*                                                                                     \n* CLI  > platformio lib search \"header:HID.h\"                                         \n* Web  > https://platformio.org/lib/search?query=header:HID.h                         \n*                                                                                     \n*************************************************************                         \n                                                                                      \n #include \"HID.h\"                                                                     \n          ^~~~~~~                                                                     \ncompilation terminated.                                                               \n*** [.pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o] Error 1     \n============================= [FAILED] Took 1.72 seconds =============================​‌​\n                                                                                      \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio lib install HID          \nLibrary Storage: C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware\\.pio\\libdeps​‌​\n\\micro                                                                                \nLibrary Manager: Installing HID                                                       \nLibrary Manager: Already installed, built-in library                                  \nError: Traceback (most recent call last):                                             \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\__main__.py\", lin​‌​\ne 130, in main                                                                        \n    cli()  # pylint: disable=no-value-for-parameter                                   \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1128, i​‌​\nn __call__                                                                            \n    return self.main(*args, **kwargs)                                                 \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1053, i​‌​\nn main                                                                                \n    rv = self.invoke(ctx)                                                             \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\commands\\__init__​‌​\n.py\", line 44, in invoke                                                              \n    return super(PlatformioCLI, self).invoke(ctx)                                     \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1659, i​‌​\nn invoke                                                                              \n    return _process_result(sub_ctx.command.invoke(sub_ctx))                           \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1659, i​‌​\nn invoke                                                                              \n    return _process_result(sub_ctx.command.invoke(sub_ctx))                           \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 1395, i​‌​\nn invoke                                                                              \n    return ctx.invoke(self.callback, **ctx.params)                                    \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\core.py\", line 754, in​‌​\n invoke                                                                               \n    return __callback(*args, **kwargs)                                                \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\click\\decorators.py\", line 2​‌​\n6, in new_func                                                                        \n    return f(get_current_context(), *args, **kwargs)                                  \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\commands\\lib\\comm​‌​\nand.py\", line 167, in lib_install                                                     \n    _save_deps(ctx, installed_pkgs)                                                   \n  File \"C:\\Users\\guill\\.platformio\\penv\\lib\\site-packages\\platformio\\commands\\lib\\comm​‌​\nand.py\", line 179, in _save_deps                                                      \n    owner=pkg.metadata.spec.owner,                                                    \nAttributeError: 'bool' object has no attribute 'metadata'                             \n                                                                                      \n============================================================                          \n                                                                                      \nAn unexpected error occurred. Further steps:                                          \n                                                                                      \n* Verify that you have the latest version of PlatformIO using                         \n  `pip install -U platformio` command                                                 \n                                                                                      \n* Try to find answer in FAQ Troubleshooting section                                   \n  https://docs.platformio.org/page/faq.html                                           \n                                                                                      \n* Report this problem to the developers                                               \n  https://github.com/platformio/platformio-core/issues                                \n                                                                                      \n============================================================                          \n                                                                                      \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run                      \nProcessing micro (platform: atmelavr; board: micro; framework: arduino)               \n--------------------------------------------------------------------------------------​‌​\n                                                                                      \nVerbose mode can be enabled via `-v, --verbose` option                                \nCONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html            \nPLATFORM: Atmel AVR (3.4.0) > Arduino Micro                                           \nHARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash                                    \nDEBUG: Current (simavr) On-board (simavr)                                             \nPACKAGES:                                                                             \n - framework-arduino-avr 5.1.0                                                        \n - toolchain-atmelavr 1.70300.191015 (7.3.0)                                          \nLDF: Library Dependency Finder -> http://bit.ly/configure-pio-ldf                     \nLDF Modes: Finder ~ chain, Compatibility ~ soft                                       \nFound 16 compatible libraries                                                         \nScanning dependencies...                                                              \nDependency Graph                                                                      \n|-- <HID> 1.0                                                                         \n|-- <FastLED> 3.4.0                                                                   \n|-- <Yet Another Arduino PcInt Library> 2.1.0                                         \n|-- <Encoder> 1.4.1                                                                   \n|-- <HID-Project> 2.8.2                                                               \n|   |-- <HID> 1.0                                                                     \n|-- <Keyboard> 1.0.2                                                                  \n|   |-- <HID> 1.0                                                                     \n|-- <Mouse> 1.0.1                                                                     \n|   |-- <HID> 1.0                                                                     \nBuilding in release mode                                                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\FastLED.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\bitswap.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorpalettes.cpp.o                         \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorutils.cpp.o                            \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\hsv2rgb.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\lib8tion.cpp.o                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\noise.cpp.o                                 \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms\\esp\\32\\clockless_rmt_esp32.cpp.o  \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\power_mgt.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\wiring.cpp.o                                \nCompiling .pio\\build\\micro\\src\\main.cpp.o                                             \nCompiling .pio\\build\\micro\\libae1\\HID\\HID.cpp.o                                       \nCompiling .pio\\build\\micro\\libe00\\Yet Another Arduino PcInt Library\\YetAnotherPcInt.cp​‌​\np.o                                                                                   \nCompiling .pio\\build\\micro\\lib165\\Encoder\\Encoder.cpp.o                               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o              \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o               \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp: In funct​‌​\nion 'void __vector_9()':                                                              \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:38:20: wa​‌​\nrning: unused variable 'callbacks' [-Wunused-variable]                                \n     PcIntCallback* callbacks = port.callbacks; \\                                     \n                    ^                                                                 \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:64:1: not​‌​\ne: in expansion of macro 'IMPLEMENT_ISR'                                              \n IMPLEMENT_ISR(port0, PCINT0_vect, PCMSK0, PCINT_INPUT_PORT0)                         \n ^~~~~~~~~~~~~                                                                        \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o      \nArchiving .pio\\build\\micro\\libe00\\libYet Another Arduino PcInt Library.a              \nArchiving .pio\\build\\micro\\lib165\\libEncoder.a                                        \nArchiving .pio\\build\\micro\\libae1\\libHID.a                                            \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\NKROKeyboard.cpp.o          \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\SurfaceDial.cpp.o           \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\System.cpp.o                \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Keybo​‌​\nardAPI.h:29:0,                                                                        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Defau​‌​\nltKeyboardAPI.h:27,                                                                   \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\nh:30,                                                                                 \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\ncpp:24:                                                                               \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/../KeyboardLayouts/Improved​‌​\nKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mod​‌​\nules                                                                                  \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\BootKeyboard.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\BootMouse.cpp.o            \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\RawHID.cpp.o               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleAbsoluteMouse.cpp.o  \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleConsumer.cpp.o       \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleGamepad.cpp.o        \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleNKROKeyboard.cpp.o   \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleSystem.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\port\\samd.cpp.o                         \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Keybo​‌​\nardAPI.h:29:0,                                                                        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/NKROK​‌​\neyboardAPI.h:27,                                                                      \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.h:30​‌​\n,                                                                                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.cpp:​‌​\n24:                                                                                   \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/../KeyboardLayouts/Improved​‌​\nKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mod​‌​\nules                                                                                  \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\BootKeyboard.cpp​‌​\n:24:                                                                                  \n.pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nCompiling .pio\\build\\micro\\lib0da\\Keyboard\\Keyboard.cpp.o                             \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/NKRO​‌​\nKeyboardAPI.h:27,                                                                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\SingleNKROKeyboa​‌​\nrd.h:30,                                                                              \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\SingleNKROKeyboa​‌​\nrd.cpp:24:                                                                            \n.pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nCompiling .pio\\build\\micro\\lib7ab\\Mouse\\Mouse.cpp.o                                   \nArchiving .pio\\build\\micro\\libFrameworkArduinoVariant.a                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\CDC.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial.cpp.o                      \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial0.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial1.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial2.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial3.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\IPAddress.cpp.o                           \nArchiving .pio\\build\\micro\\lib7ab\\libMouse.a                                          \nArchiving .pio\\build\\micro\\lib0da\\libKeyboard.a                                       \nArchiving .pio\\build\\micro\\libb88\\libHID-Project.a                                    \nCompiling .pio\\build\\micro\\FrameworkArduino\\PluggableUSB.cpp.o                        \nCompiling .pio\\build\\micro\\FrameworkArduino\\Print.cpp.o                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\Stream.cpp.o                              \nCompiling .pio\\build\\micro\\FrameworkArduino\\Tone.cpp.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\USBCore.cpp.o                             \nCompiling .pio\\build\\micro\\FrameworkArduino\\WInterrupts.c.o                           \nCompiling .pio\\build\\micro\\FrameworkArduino\\WMath.cpp.o                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\WString.cpp.o                             \nCompiling .pio\\build\\micro\\FrameworkArduino\\abi.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\hooks.c.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\main.cpp.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\new.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring.c.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_analog.c.o                         \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_digital.c.o                        \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_pulse.S.o                          \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_pulse.c.o                          \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_shift.c.o                          \nArchiving .pio\\build\\micro\\libFrameworkArduino.a                                      \nLinking .pio\\build\\micro\\firmware.elf                                                 \nChecking size .pio\\build\\micro\\firmware.elf                                           \nAdvanced Memory Usage is available via \"PlatformIO Home > Project Inspect\"            \nRAM:   [=         ]   6.3% (used 162 bytes from 2560 bytes)                           \nFlash: [=         ]  12.2% (used 3490 bytes from 28672 bytes)                         \nBuilding .pio\\build\\micro\\firmware.hex                                                \n============================ [SUCCESS] Took 3.71 seconds ============================ \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run                      \nProcessing micro (platform: atmelavr; board: micro; framework: arduino)               \n--------------------------------------------------------------------------------------​‌​\n                                                                                      \nVerbose mode can be enabled via `-v, --verbose` option                                \nCONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html            \nPLATFORM: Atmel AVR (3.4.0) > Arduino Micro                                           \nHARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash                                    \nDEBUG: Current (simavr) On-board (simavr)                                             \nPACKAGES:                                                                             \n - framework-arduino-avr 5.1.0                                                        \n - toolchain-atmelavr 1.70300.191015 (7.3.0)                                          \nLDF: Library Dependency Finder -> http://bit.ly/configure-pio-ldf                     \nLDF Modes: Finder ~ chain, Compatibility ~ soft                                       \nFound 16 compatible libraries                                                         \nScanning dependencies...                                                              \nDependency Graph                                                                      \n|-- <HID> 1.0                                                                         \n|-- <FastLED> 3.4.0                                                                   \n|-- <Yet Another Arduino PcInt Library> 2.1.0                                         \n|-- <Encoder> 1.4.1                                                                   \n|-- <HID-Project> 2.8.2                                                               \n|   |-- <HID> 1.0                                                                     \nBuilding in release mode                                                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\FastLED.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\bitswap.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorpalettes.cpp.o                         \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorutils.cpp.o                            \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\hsv2rgb.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\lib8tion.cpp.o                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\noise.cpp.o                                 \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms\\esp\\32\\clockless_rmt_esp32.cpp.o  \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\power_mgt.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\wiring.cpp.o                                \nCompiling .pio\\build\\micro\\src\\main.cpp.o                                             \nCompiling .pio\\build\\micro\\libae1\\HID\\HID.cpp.o                                       \nCompiling .pio\\build\\micro\\libe00\\Yet Another Arduino PcInt Library\\YetAnotherPcInt.cp​‌​\np.o                                                                                   \nCompiling .pio\\build\\micro\\lib165\\Encoder\\Encoder.cpp.o                               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o              \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o               \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp: In funct​‌​\nion 'void __vector_9()':                                                              \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:38:20: wa​‌​\nrning: unused variable 'callbacks' [-Wunused-variable]                                \n     PcIntCallback* callbacks = port.callbacks; \\                                     \n                    ^                                                                 \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:64:1: not​‌​\ne: in expansion of macro 'IMPLEMENT_ISR'                                              \n IMPLEMENT_ISR(port0, PCINT0_vect, PCMSK0, PCINT_INPUT_PORT0)                         \n ^~~~~~~~~~~~~                                                                        \nArchiving .pio\\build\\micro\\libae1\\libHID.a                                            \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o      \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\NKROKeyboard.cpp.o          \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\SurfaceDial.cpp.o           \nArchiving .pio\\build\\micro\\lib165\\libEncoder.a                                        \nArchiving .pio\\build\\micro\\libe00\\libYet Another Arduino PcInt Library.a              \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\System.cpp.o                \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\BootKeyboard.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\BootMouse.cpp.o            \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\RawHID.cpp.o               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleAbsoluteMouse.cpp.o  \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Keybo​‌​\nardAPI.h:29:0,                                                                        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Defau​‌​\nltKeyboardAPI.h:27,                                                                   \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\nh:30,                                                                                 \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleConsumer.cpp.o       \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\ncpp:24:                                                                               \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/../KeyboardLayouts/Improved​‌​\nKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mod​‌​\nules                                                                                  \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleGamepad.cpp.o        \n                     ^~~~~~~~~~~~~~~~~~~~~~~Compiling .pio\\build\\micro\\libb88\\HID-Proj​‌​\nect\\SingleReport\\SingleNKROKeyboard.cpp.o                                             \n~~~~~~~~~~~~~~~~~~~~~~~~~~                                                            \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Keybo​‌​\nardAPI.h:29:0,                                                                        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/NKROK​‌​\neyboardAPI.h:27,                                                                      \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.h:30​‌​\n,                                                                                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.cpp:​‌​\n24:                                                                                   \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/../KeyboardLayouts/Improved​‌​\nKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mod​‌​\nules                                                                                  \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleSystem.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\port\\samd.cpp.o                         \nArchiving .pio\\build\\micro\\libFrameworkArduinoVariant.a                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\CDC.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial.cpp.o                      \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial0.cpp.o                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\BootKeyboard.cpp​‌​\n:24:                                                                                  \n.pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial1.cpp.o                     \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~Compiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial2.c​‌​\npp.o                                                                                  \n~~Compiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial3.cpp.o                   \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                           \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/NKRO​‌​\nKeyboardAPI.h:27,                                                                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\SingleNKROKeyboa​‌​\nrd.h:30,                                                                              \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\SingleNKROKeyboa​‌​\nrd.cpp:24:                                                                            \n.pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Compiling .pio\\bui​‌​\nld\\micro\\FrameworkArduino\\IPAddress.cpp.o                                             \n~~                                                                                    \nCompiling .pio\\build\\micro\\FrameworkArduino\\PluggableUSB.cpp.o                        \nCompiling .pio\\build\\micro\\FrameworkArduino\\Print.cpp.o                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\Stream.cpp.o                              \nCompiling .pio\\build\\micro\\FrameworkArduino\\Tone.cpp.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\USBCore.cpp.o                             \nCompiling .pio\\build\\micro\\FrameworkArduino\\WInterrupts.c.o                           \nCompiling .pio\\build\\micro\\FrameworkArduino\\WMath.cpp.o                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\WString.cpp.o                             \nCompiling .pio\\build\\micro\\FrameworkArduino\\abi.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\hooks.c.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\main.cpp.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\new.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring.c.o                                \nArchiving .pio\\build\\micro\\libb88\\libHID-Project.a                                    \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_analog.c.o                         \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_digital.c.o                        \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_pulse.S.o                          \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_pulse.c.o                          \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_shift.c.o                          \nArchiving .pio\\build\\micro\\libFrameworkArduino.a                                      \nLinking .pio\\build\\micro\\firmware.elf                                                 \nChecking size .pio\\build\\micro\\firmware.elf                                           \nAdvanced Memory Usage is available via \"PlatformIO Home > Project Inspect\"            \nRAM:   [=         ]   6.3% (used 162 bytes from 2560 bytes)                           \nFlash: [=         ]  12.2% (used 3490 bytes from 28672 bytes)                         \nBuilding .pio\\build\\micro\\firmware.hex                                                \n============================ [SUCCESS] Took 2.97 seconds ============================ \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run                      \nProcessing micro (platform: atmelavr; board: micro; framework: arduino)               \n--------------------------------------------------------------------------------------​‌​\n                                                                                      \nVerbose mode can be enabled via `-v, --verbose` option                                \nCONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html            \nPLATFORM: Atmel AVR (3.4.0) > Arduino Micro                                           \nHARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash                                    \nDEBUG: Current (simavr) On-board (simavr)                                             \nPACKAGES:                                                                             \n - framework-arduino-avr 5.1.0                                                        \n - toolchain-atmelavr 1.70300.191015 (7.3.0)                                          \nLDF: Library Dependency Finder -> http://bit.ly/configure-pio-ldf                     \nLDF Modes: Finder ~ chain, Compatibility ~ soft                                       \nFound 16 compatible libraries                                                         \nScanning dependencies...                                                              \nDependency Graph                                                                      \n|-- <HID> 1.0                                                                         \n|-- <FastLED> 3.4.0                                                                   \n|   |-- <SPI> 1.0                                                                     \n|   |-- <SoftwareSerial> 1.0                                                          \n|-- <Yet Another Arduino PcInt Library> 2.1.0                                         \n|-- <Encoder> 1.4.1                                                                   \n|-- <HID-Project> 2.8.2                                                               \n|   |-- <HID> 1.0                                                                     \n|-- <EEPROM> 2.0                                                                      \nBuilding in release mode                                                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\FastLED.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\bitswap.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorpalettes.cpp.o                         \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\colorutils.cpp.o                            \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\hsv2rgb.cpp.o                               \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\lib8tion.cpp.o                              \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\noise.cpp.o                                 \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\platforms\\esp\\32\\clockless_rmt_esp32.cpp.o  \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\power_mgt.cpp.o                             \nCompiling .pio\\build\\micro\\libdf0\\FastLED\\wiring.cpp.o                                \nCompiling .pio\\build\\micro\\src\\button_action.cpp.o                                    \nCompiling .pio\\build\\micro\\src\\main.cpp.o                                             \nCompiling .pio\\build\\micro\\src\\nvm.cpp.o                                              \nCompiling .pio\\build\\micro\\src\\shortcuts.cpp.o                                        \nCompiling .pio\\build\\micro\\libae1\\HID\\HID.cpp.o                                       \nCompiling .pio\\build\\micro\\libe08\\SPI\\SPI.cpp.o                                       \nCompiling .pio\\build\\micro\\libb7a\\SoftwareSerial\\SoftwareSerial.cpp.o                 \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src/HID-Project.h:50,            \n                 from src\\button_action.cpp:3:                                        \n.pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src/HID-Project.h:50,            \n                 from src\\main.cpp:2:                                                 \n.pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nIn file included from src\\button_action.cpp:4:0:                                      \n.pio\\libdeps\\micro\\FastLED\\src/FastLED.h:14:21: note: #pragma message: FastLED version​‌​\n 3.004.000                                                                            \n #    pragma message \"FastLED version 3.004.000\"                                      \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~                                      \nIn file included from src\\main.cpp:3:0:                                               \n.pio\\libdeps\\micro\\FastLED\\src/FastLED.h:14:21: note: #pragma message: FastLED version​‌​\n 3.004.000                                                                            \n #    pragma message \"FastLED version 3.004.000\"                                      \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~                                      \nCompiling .pio\\build\\micro\\libe00\\Yet Another Arduino PcInt Library\\YetAnotherPcInt.cp​‌​\np.o                                                                                   \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src/HID-Project.h:50,            \n                 from src\\shortcuts.cpp:2:                                            \n.pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nArchiving .pio\\build\\micro\\libae1\\libHID.a                                            \nCompiling .pio\\build\\micro\\lib165\\Encoder\\Encoder.cpp.o                               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\AbsoluteMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o              \nArchiving .pio\\build\\micro\\libe08\\libSPI.a                                            \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedKeyboard.cpp.o      \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\NKROKeyboard.cpp.o          \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\SurfaceDial.cpp.o           \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp: In funct​‌​\nion 'void __vector_9()':                                                              \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:38:20: wa​‌​\nrning: unused variable 'callbacks' [-Wunused-variable]                                \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\System.cpp.o                \n     PcIntCallback* callbacks = port.callbacks; \\                                     \n                    ^                                                                 \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:64:1: not​‌​\ne: in expansion of macro 'IMPLEMENT_ISR'                                              \n IMPLEMENT_ISR(port0, PCINT0_vect, PCMSK0, PCINT_INPUT_PORT0)                         \n ^~~~~~~~Compiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\BootKeyboard.cpp.o​‌​\n                                                                                      \n~~~~~                                                                                 \nArchiving .pio\\build\\micro\\libb7a\\libSoftwareSerial.a                                 \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\BootMouse.cpp.o            \nArchiving .pio\\build\\micro\\libe00\\libYet Another Arduino PcInt Library.a              \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\RawHID.cpp.o               \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleAbsoluteMouse.cpp.o  \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Keybo​‌​\nardAPI.h:29:0,                                                                        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/NKROK​‌​\neyboardAPI.h:27,                                                                      \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.h:30​‌​\n,                                                                                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.cpp:​‌​\n24:                                                                                   \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/../KeyboardLayouts/Improved​‌​\nKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mod​‌​\nules                                                                                  \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Keybo​‌​\nardAPI.h:29:0,                                                                        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Defau​‌​\nltKeyboardAPI.h:27,                                                                   \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\nh:30,                                                                                 \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\ncpp:24:                                                                               \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/../KeyboardLayouts/Improved​‌​\nKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mod​‌​\nules                                                                                  \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Compiling .pio\\build​‌​\n\\micro\\libb88\\HID-Project\\SingleReport\\SingleConsumer.cpp.o                           \n~~~~                                                                                  \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleGamepad.cpp.o        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\BootKeyboard.cpp​‌​\n:24:                                                                                  \n.pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~Archiving .pio\\build\\micro\\lib165\\libEncoder.a               \n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleNKROKeyboard.cpp.o   \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleSystem.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\port\\samd.cpp.o                         \nArchiving .pio\\build\\micro\\libFrameworkArduinoVariant.a                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\CDC.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial.cpp.o                      \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial0.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial1.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial2.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial3.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\IPAddress.cpp.o                           \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/NKRO​‌​\nKeyboardAPI.h:27,                                                                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\SingleNKROKeyboa​‌​\nrd.h:30,                                                                              \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\SingleNKROKeyboa​‌​\nrd.cpp:24:                                                                            \n.pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\PluggableUSB.cpp.o                        \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Compiling .pio\\build\\micro\\Frame​‌​\nworkArduino\\Print.cpp.o                                                               \n~~~~~~~~~~~~~~~~                                                                      \nCompiling .pio\\build\\micro\\FrameworkArduino\\Stream.cpp.o                              \nCompiling .pio\\build\\micro\\FrameworkArduino\\Tone.cpp.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\USBCore.cpp.o                             \nCompiling .pio\\build\\micro\\FrameworkArduino\\WInterrupts.c.o                           \nCompiling .pio\\build\\micro\\FrameworkArduino\\WMath.cpp.o                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\WString.cpp.o                             \nCompiling .pio\\build\\micro\\FrameworkArduino\\abi.cpp.o                                 \nArchiving .pio\\build\\micro\\libb88\\libHID-Project.a                                    \nCompiling .pio\\build\\micro\\FrameworkArduino\\hooks.c.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\main.cpp.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\new.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring.c.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_analog.c.o                         \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_digital.c.o                        \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_pulse.S.o                          \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_pulse.c.o                          \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_shift.c.o                          \nArchiving .pio\\build\\micro\\libFrameworkArduino.a                                      \nLinking .pio\\build\\micro\\firmware.elf                                                 \nChecking size .pio\\build\\micro\\firmware.elf                                           \nAdvanced Memory Usage is available via \"PlatformIO Home > Project Inspect\"            \nRAM:   [==        ]  21.0% (used 537 bytes from 2560 bytes)                           \nFlash: [====      ]  43.9% (used 12582 bytes from 28672 bytes)                        \nBuilding .pio\\build\\micro\\firmware.hex                                                \n============================ [SUCCESS] Took 3.78 seconds ============================ \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>pio run                      \nProcessing micro (platform: atmelavr; board: micro; framework: arduino)               \n--------------------------------------------------------------------------------------​‌​\n                                                                                      \nVerbose mode can be enabled via `-v, --verbose` option                                \nCONFIGURATION: https://docs.platformio.org/page/boards/atmelavr/micro.html            \nPLATFORM: Atmel AVR (3.4.0) > Arduino Micro                                           \nHARDWARE: ATMEGA32U4 16MHz, 2.50KB RAM, 28KB Flash                                    \nDEBUG: Current (simavr) On-board (simavr)                                             \nPACKAGES:                                                                             \n - framework-arduino-avr 5.1.0                                                        \n - toolchain-atmelavr 1.70300.191015 (7.3.0)                                          \nLDF: Library Dependency Finder -> http://bit.ly/configure-pio-ldf                     \nLDF Modes: Finder ~ chain, Compatibility ~ soft                                       \nLibrary Manager: Installing paulo-raca/Yet Another Arduino PcInt Library @ ^2.1.0     \n                                                                                      \nUnpacking  [------------------------------------]    0%                               \nUnpacking  [##----------------------------------]    7%                               \nUnpacking  [#####-------------------------------]   14%                               \nUnpacking  [#######-----------------------------]   21%                               \nUnpacking  [##########--------------------------]   28%                               \nUnpacking  [############------------------------]   35%                               \nUnpacking  [###############---------------------]   42%                               \nUnpacking  [##################------------------]   50%                               \nUnpacking  [####################----------------]   57%                               \nUnpacking  [#######################-------------]   64%                               \nUnpacking  [#########################-----------]   71%                               \nUnpacking  [############################--------]   78%                               \nUnpacking  [##############################------]   85%                               \nUnpacking  [#################################---]   92%                               \nUnpacking  [####################################]  100%                               \nLibrary Manager: Yet Another Arduino PcInt Library @ 2.1.0 has been installed!        \nLibrary Manager: Installing paulstoffregen/Encoder @ ^1.4.1                           \n                                                                                      \nUnpacking  [------------------------------------]    0%                               \nUnpacking  [#-----------------------------------]    5%                               \nUnpacking  [###---------------------------------]   10%                               \nUnpacking  [#####-------------------------------]   15%                               \nUnpacking  [#######-----------------------------]   20%                               \nUnpacking  [#########---------------------------]   25%                               \nUnpacking  [##########--------------------------]   30%                               \nUnpacking  [############------------------------]   35%                               \nUnpacking  [##############----------------------]   40%                               \nUnpacking  [################--------------------]   45%                               \nUnpacking  [##################------------------]   50%                               \nUnpacking  [###################-----------------]   55%                               \nUnpacking  [#####################---------------]   60%                               \nUnpacking  [#######################-------------]   65%                               \nUnpacking  [#########################-----------]   70%                               \nUnpacking  [###########################---------]   75%                               \nUnpacking  [############################--------]   80%                               \nUnpacking  [##############################------]   85%                               \nUnpacking  [################################----]   90%                               \nUnpacking  [##################################--]   95%                               \nUnpacking  [####################################]  100%                               \nLibrary Manager: Encoder @ 1.4.1 has been installed!                                  \nLibrary Manager: Installing nicohood/HID-Project @ ^2.8.2                             \n                                                                                      \nUnpacking  [------------------------------------]    0%                               \nUnpacking  [------------------------------------]    1%                               \nUnpacking  [------------------------------------]    2%                               \nUnpacking  [#-----------------------------------]    3%                               \nUnpacking  [#-----------------------------------]    4%                               \nUnpacking  [#-----------------------------------]    5%                               \nUnpacking  [##----------------------------------]    6%                               \nUnpacking  [##----------------------------------]    7%                               \nUnpacking  [###---------------------------------]    8%                               \nUnpacking  [###---------------------------------]    9%                               \nUnpacking  [###---------------------------------]   10%                               \nUnpacking  [####--------------------------------]   11%                               \nUnpacking  [####--------------------------------]   12%                               \nUnpacking  [####--------------------------------]   13%                               \nUnpacking  [#####-------------------------------]   14%                               \nUnpacking  [#####-------------------------------]   15%                               \nUnpacking  [######------------------------------]   16%                               \nUnpacking  [######------------------------------]   17%                               \nUnpacking  [######------------------------------]   18%                               \nUnpacking  [#######-----------------------------]   20%                               \nUnpacking  [#######-----------------------------]   21%                               \nUnpacking  [#######-----------------------------]   22%                               \nUnpacking  [########----------------------------]   23%                               \nUnpacking  [########----------------------------]   24%                               \nUnpacking  [#########---------------------------]   25%                               \nUnpacking  [#########---------------------------]   26%                               \nUnpacking  [#########---------------------------]   27%                               \nUnpacking  [##########--------------------------]   28%                               \nUnpacking  [##########--------------------------]   29%                               \nUnpacking  [##########--------------------------]   30%                               \nUnpacking  [###########-------------------------]   31%                               \nUnpacking  [###########-------------------------]   32%                               \nUnpacking  [############------------------------]   33%                               \nUnpacking  [############------------------------]   34%                               \nUnpacking  [############------------------------]   35%                               \nUnpacking  [#############-----------------------]   36%                               \nUnpacking  [#############-----------------------]   37%                               \nUnpacking  [##############----------------------]   38%                               \nUnpacking  [##############----------------------]   40%                               \nUnpacking  [##############----------------------]   41%                               \nUnpacking  [###############---------------------]   42%                               \nUnpacking  [###############---------------------]   43%                               \nUnpacking  [###############---------------------]   44%                               \nUnpacking  [################--------------------]   45%                               \nUnpacking  [################--------------------]   46%                               \nUnpacking  [#################-------------------]   47%                               \nUnpacking  [#################-------------------]   48%                               \nUnpacking  [#################-------------------]   49%                               \nUnpacking  [##################------------------]   50%                               \nUnpacking  [##################------------------]   51%                               \nUnpacking  [##################------------------]   52%                               \nUnpacking  [###################-----------------]   53%                               \nUnpacking  [###################-----------------]   54%                               \nUnpacking  [####################----------------]   55%                               \nUnpacking  [####################----------------]   56%                               \nUnpacking  [####################----------------]   57%                               \nUnpacking  [#####################---------------]   58%                               \nUnpacking  [#####################---------------]   60%                               \nUnpacking  [#####################---------------]   61%                               \nUnpacking  [######################--------------]   62%                               \nUnpacking  [######################--------------]   63%                               \nUnpacking  [#######################-------------]   64%                               \nUnpacking  [#######################-------------]   65%                               \nUnpacking  [#######################-------------]   66%                               \nUnpacking  [########################------------]   67%                               \nUnpacking  [########################------------]   68%                               \nUnpacking  [#########################-----------]   69%                               \nUnpacking  [#########################-----------]   70%                               \nUnpacking  [#########################-----------]   71%                               \nUnpacking  [##########################----------]   72%                               \nUnpacking  [##########################----------]   73%                               \nUnpacking  [##########################----------]   74%                               \nUnpacking  [###########################---------]   75%                               \nUnpacking  [###########################---------]   76%                               \nUnpacking  [############################--------]   77%                               \nUnpacking  [############################--------]   78%                               \nUnpacking  [############################--------]   80%                               \nUnpacking  [#############################-------]   81%                               \nUnpacking  [#############################-------]   82%                               \nUnpacking  [#############################-------]   83%                               \nUnpacking  [##############################------]   84%                               \nUnpacking  [##############################------]   85%                               \nUnpacking  [###############################-----]   86%                               \nUnpacking  [###############################-----]   87%                               \nUnpacking  [###############################-----]   88%                               \nUnpacking  [################################----]   89%                               \nUnpacking  [################################----]   90%                               \nUnpacking  [################################----]   91%                               \nUnpacking  [#################################---]   92%                               \nUnpacking  [#################################---]   93%                               \nUnpacking  [##################################--]   94%                               \nUnpacking  [##################################--]   95%                               \nUnpacking  [##################################--]   96%                               \nUnpacking  [###################################-]   97%                               \nUnpacking  [###################################-]   98%                               \nUnpacking  [####################################]  100%                               \nLibrary Manager: HID-Project @ 2.8.2 has been installed!                              \nFound 13 compatible libraries                                                         \nScanning dependencies...                                                              \nDependency Graph                                                                      \n|-- <HID> 1.0                                                                         \n|-- <FastLED> 3.4.0                                                                   \n|   |-- <SPI> 1.0                                                                     \n|   |-- <SoftwareSerial> 1.0                                                          \n|-- <Yet Another Arduino PcInt Library> 2.1.0                                         \n|-- <Encoder> 1.4.1                                                                   \n|-- <HID-Project> 2.8.2                                                               \n|   |-- <HID> 1.0                                                                     \n|-- <EEPROM> 2.0                                                                      \nBuilding in release mode                                                              \nCompiling .pio\\build\\micro\\lib182\\FastLED\\FastLED.cpp.o                               \nCompiling .pio\\build\\micro\\lib182\\FastLED\\bitswap.cpp.o                               \nCompiling .pio\\build\\micro\\lib182\\FastLED\\colorpalettes.cpp.o                         \nCompiling .pio\\build\\micro\\lib182\\FastLED\\colorutils.cpp.o                            \nCompiling .pio\\build\\micro\\lib182\\FastLED\\hsv2rgb.cpp.o                               \nCompiling .pio\\build\\micro\\lib182\\FastLED\\lib8tion.cpp.o                              \nCompiling .pio\\build\\micro\\lib182\\FastLED\\noise.cpp.o                                 \nCompiling .pio\\build\\micro\\lib182\\FastLED\\platforms.cpp.o                             \nCompiling .pio\\build\\micro\\lib182\\FastLED\\platforms\\esp\\32\\clockless_rmt_esp32.cpp.o  \nCompiling .pio\\build\\micro\\lib182\\FastLED\\power_mgt.cpp.o                             \nCompiling .pio\\build\\micro\\lib182\\FastLED\\wiring.cpp.o                                \nCompiling .pio\\build\\micro\\src\\button_action.cpp.o                                    \nCompiling .pio\\build\\micro\\src\\main.cpp.o                                             \nCompiling .pio\\build\\micro\\src\\nvm.cpp.o                                              \nCompiling .pio\\build\\micro\\src\\shortcuts.cpp.o                                        \nCompiling .pio\\build\\micro\\libae1\\HID\\HID.cpp.o                                       \nCompiling .pio\\build\\micro\\libe08\\SPI\\SPI.cpp.o                                       \nCompiling .pio\\build\\micro\\libb7a\\SoftwareSerial\\SoftwareSerial.cpp.o                 \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src/HID-Project.h:50,            \n                 from src\\shortcuts.cpp:2:                                            \n.pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nCompiling .pio\\build\\micro\\libe00\\Yet Another Arduino PcInt Library\\YetAnotherPcInt.cp​‌​\np.o                                                                                   \nCompiling .pio\\build\\micro\\lib165\\Encoder\\Encoder.cpp.o                               \nArchiving .pio\\build\\micro\\libe08\\libSPI.a                                            \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src/HID-Project.h:50,            \n                 from src\\button_action.cpp:3:                                        \n.pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src/SingleReport/BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src/HID-Project.h:50,            \n                 from src\\main.cpp:2:                                                 \n.pio\\libdeps\\micro\\HID-Project\\src/SingleReport/../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~Compiling .pio\\build\\micro\\libb88\\HID-Project\\​‌​\nMultiReport\\AbsoluteMouse.cpp.o                                                       \n~~~Compiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Consumer.cpp.o           \n~~Compiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\Gamepad.cpp.o             \n~~~~~~~~~~~~~~~~~~~~~~~~~                                                             \nIn file included from src\\button_action.cpp:4:0:                                      \nC:\\Users\\guill\\.platformio\\lib\\FastLED\\src/FastLED.h:14:21: note: #pragma message: Fas​‌​\ntLED version 3.004.000                                                                \n #    pragma message \"FastLED version 3.004.000\"                                      \n                     ^~~~~~~~~~~~~~Compiling .pio\\build\\micro\\libb88\\HID-Project\\Multi​‌​\nReport\\ImprovedKeyboard.cpp.o                                                         \n~~~~~~~~~~~~~                                                                         \nIn file included from src\\main.cpp:3:0:                                               \nC:\\Users\\guill\\.platformio\\lib\\FastLED\\src/FastLED.h:14:21: note: #pragma message: Fas​‌​\ntLED version 3.004.000                                                                \n #    pragma message \"FastLED version 3.004.000\"                                      \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~                                      \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\ImprovedMouse.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\NKROKeyboard.cpp.o          \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\SurfaceDial.cpp.o           \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp: In funct​‌​\nion 'void __vector_9()':                                                              \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:38:20: wa​‌​\nrning: unused variable 'callbacks' [-Wunused-variable]                                \n     PcIntCallback* callbacks = port.callbacks; \\                                     \n                    ^                                                                 \n.pio\\libdeps\\micro\\Yet Another Arduino PcInt Library\\src\\YetAnotherPcInt.cpp:64:1: not​‌​\ne: in expansion of macro 'IMPLEMENT_ISR'                                              \n IMPLEMENT_ISR(port0, PCINT0_vect, PCMSK0, PCINT_INPUT_PORT0)                         \n ^~~~~~~~~~~~~                                                                        \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\MultiReport\\System.cpp.o                \nArchiving .pio\\build\\micro\\libae1\\libHID.a                                            \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\BootKeyboard.cpp.o         \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Keybo​‌​\nardAPI.h:29:0,                                                                        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Defau​‌​\nltKeyboardAPI.h:27,                                                                   \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\nh:30,                                                                                 \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\ImprovedKeyboard.​‌​\ncpp:24:                                                                               \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/../KeyboardLayouts/Improved​‌​\nKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mod​‌​\nules                                                                                  \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nArchiving .pio\\build\\micro\\lib165\\libEncoder.a                                        \nArchiving .pio\\build\\micro\\libe00\\libYet Another Arduino PcInt Library.a              \nArchiving .pio\\build\\micro\\libb7a\\libSoftwareSerial.a                                 \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\BootMouse.cpp.o            \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\RawHID.cpp.o               \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/Keybo​‌​\nardAPI.h:29:0,                                                                        \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/NKROK​‌​\neyboardAPI.h:27,                                                                      \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.h:30​‌​\n,                                                                                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\NKROKeyboard.cpp:​‌​\n24:                                                                                   \n.pio\\libdeps\\micro\\HID-Project\\src\\MultiReport\\../HID-APIs/../KeyboardLayouts/Improved​‌​\nKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mod​‌​\nules                                                                                  \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~Compiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\S​‌​\ningleAbsoluteMouse.cpp.o                                                              \n~~~~~~~~~~~~~~~~~~~Compiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleCo​‌​\nnsumer.cpp.o                                                                          \n~~~~~~~~~~~~~~~~~~~~~~~~~                                                             \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleGamepad.cpp.o        \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleNKROKeyboard.cpp.o   \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\SingleReport\\SingleSystem.cpp.o         \nCompiling .pio\\build\\micro\\libb88\\HID-Project\\port\\samd.cpp.o                         \nArchiving .pio\\build\\micro\\libFrameworkArduinoVariant.a                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\CDC.cpp.o                                 \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Defa​‌​\nultKeyboardAPI.h:27,                                                                  \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\BootKeyboard.h:3​‌​\n0,                                                                                    \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\BootKeyboard.cpp​‌​\n:24:                                                                                  \n.pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial.cpp.o                      \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial0.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial1.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial2.cpp.o                     \nIn file included from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/Keyb​‌​\noardAPI.h:29:0,                                                                       \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/NKRO​‌​\nKeyboardAPI.h:27,                                                                     \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\SingleNKROKeyboa​‌​\nrd.h:30,                                                                              \n                 from .pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\SingleNKROKeyboa​‌​\nrd.cpp:24:                                                                            \n.pio\\libdeps\\micro\\HID-Project\\src\\SingleReport\\../HID-APIs/../KeyboardLayouts/Improve​‌​\ndKeylayouts.h:54:21: note: #pragma message: Using default ASCII layout for keyboard mo​‌​\ndules                                                                                 \n     #pragma message \"Using default ASCII layout for keyboard modules\"                \n                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                \nCompiling .pio\\build\\micro\\FrameworkArduino\\HardwareSerial3.cpp.o                     \nCompiling .pio\\build\\micro\\FrameworkArduino\\IPAddress.cpp.o                           \nCompiling .pio\\build\\micro\\FrameworkArduino\\PluggableUSB.cpp.o                        \nCompiling .pio\\build\\micro\\FrameworkArduino\\Print.cpp.o                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\Stream.cpp.o                              \nCompiling .pio\\build\\micro\\FrameworkArduino\\Tone.cpp.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\USBCore.cpp.o                             \nCompiling .pio\\build\\micro\\FrameworkArduino\\WInterrupts.c.o                           \nArchiving .pio\\build\\micro\\libb88\\libHID-Project.a                                    \nCompiling .pio\\build\\micro\\FrameworkArduino\\WMath.cpp.o                               \nCompiling .pio\\build\\micro\\FrameworkArduino\\WString.cpp.o                             \nCompiling .pio\\build\\micro\\FrameworkArduino\\abi.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\hooks.c.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\main.cpp.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\new.cpp.o                                 \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring.c.o                                \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_analog.c.o                         \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_digital.c.o                        \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_pulse.S.o                          \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_pulse.c.o                          \nCompiling .pio\\build\\micro\\FrameworkArduino\\wiring_shift.c.o                          \nArchiving .pio\\build\\micro\\libFrameworkArduino.a                                      \nLinking .pio\\build\\micro\\firmware.elf                                                 \nChecking size .pio\\build\\micro\\firmware.elf                                           \nAdvanced Memory Usage is available via \"PlatformIO Home > Project Inspect\"            \nRAM:   [==        ]  21.0% (used 537 bytes from 2560 bytes)                           \nFlash: [====      ]  43.9% (used 12582 bytes from 28672 bytes)                        \nBuilding .pio\\build\\micro\\firmware.hex                                                \n============================ [SUCCESS] Took 6.39 seconds ============================ \n                                                                                      \nC:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware>",
			"settings":
			{
				"buffer_size": 343102,
				"line_ending": "Windows",
				"name": " ",
				"scratch": true
			},
			"undo_stack":
			[
				[
					1286,
					3,
					"terminus_render",
					null,
					"",
					"AQAAAAAAAAABAAAApDkFAAAAAACkOQUAAAAAAAAAAAAAAPC/"
				],
				[
					1289,
					1,
					"terminus_render",
					null,
					"",
					"AQAAAAAAAAABAAAALzkFAAAAAAAvOQUAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "PlatformIO",
	"build_system_choices":
	[
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Build"
				],
				[
					"PlatformIO",
					"Upload"
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"PlatformIO",
					"Test"
				],
				[
					"PlatformIO",
					"Upload SPIFFS image"
				],
				[
					"PlatformIO",
					"Update platforms and libraries"
				],
				[
					"PlatformIO",
					"Upgrade PlatformIO Core"
				]
			],
			[
				"PlatformIO",
				"Upload"
			]
		]
	],
	"build_varint": "Upload",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"temrin",
				"Terminus: Close All"
			],
			[
				"set c",
				"Set Syntax: C"
			],
			[
				"set",
				"Set Syntax: C"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"package ins",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/guill/Documents/GIT/MediaMacroKeyboard/firmware",
		"/C/Users/guill/Documents/GIT/MediaMacroKeyboard/firmware/test"
	],
	"file_history":
	[
		"/C/Users/guill/Documents/GIT/MediaMacroKeyboard/firmware/platformio.ini",
		"/C/Users/guill/Documents/GIT/MediaMacroKeyboard/MediaMacroKeyboard.ino"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "platformio.ini",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 585,
						"regions":
						{
						},
						"selection":
						[
							[
								585,
								585
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1486,
						"regions":
						{
						},
						"selection":
						[
							[
								156,
								156
							]
						],
						"settings":
						{
							"auto_name": "#include <Arduino.h>",
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/guill/Documents/GIT/MediaMacroKeyboard/.gitignore",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20,
						"regions":
						{
						},
						"selection":
						[
							[
								13,
								13
							]
						],
						"settings":
						{
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 3,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 343102,
						"regions":
						{
						},
						"selection":
						[
							[
								343102,
								343102
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_scheme": "Terminus.hidden-color-scheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"is_widget": true,
							"result_base_dir": "C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus.highlight_counter": 4167,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"cmd.exe"
								],
								"config_name": "Command Prompt",
								"cwd": "C:\\Users\\guill\\Documents\\GIT\\MediaMacroKeyboard\\firmware",
								"env":
								{
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.panel_name": null,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 56448.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 56448.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 163.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "PlatformIO",
	"project": "platformio.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 240.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
